{"version":3,"sources":["components/AmountControl/AmountControl.js","components/AmountControl/index.js","components/ProductDescription/ProductDescription.js","components/ProductDescription/index.js","containers/Product/Product.js","containers/Product/index.js","components/Breadcrumbs/Breadcrumbs.js","components/Breadcrumbs/index.js"],"names":["AmountControl","amount","small","onAddToCart","onRemoveFromCart","list","className","onClick","defaultName","defaultProps","ProductDescription","id","name","image","thumb","price","brand","categoryName","category","description","pickup","tremolo","cartItemAmount","src","alt","currencyFormat","Button","back","linkTo","route","catalog","link","main","cart","Product","this","props","match","productById","addItemToCart","removeItemFromCart","productData","params","Breadcrumbs","crumbs","React","Component","connect","store","productByIdSelector","cartItemAmountSelector","dispatch","product","to","home","map","item","index","length","key"],"mappings":"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","file":"static/js/6.2125da72.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.sass';\n\nconst AmountControl = ({ amount, small, onAddToCart, onRemoveFromCart, list }) => (\n    <div\n        className={`amount-control ${small ? 'amount-control--small' : ''} ${\n            list ? 'amount-control--list' : ''\n        }`}\n    >\n        {amount ? (\n            <>\n                <button onClick={onRemoveFromCart} className=\"amount-control__minus\">\n                    -\n                </button>\n                <span className=\"amount-control__number\">{amount}</span>\n                <button onClick={onAddToCart} className=\"amount-control__plus\">\n                    +\n                </button>\n            </>\n        ) : (\n            <button onClick={onAddToCart} className=\"amount-control__add\">\n                Add to cart\n            </button>\n        )}\n    </div>\n);\n\nAmountControl.defaultName = 'AmountControl';\nAmountControl.propTypes = {\n    onAddToCart: PropTypes.func.isRequired,\n    onRemoveFromCart: PropTypes.func.isRequired,\n    amount: PropTypes.number,\n    small: PropTypes.bool,\n    list: PropTypes.bool\n};\nAmountControl.defaultProps = {\n    amount: 0,\n    small: false,\n    list: false\n};\n\nexport default AmountControl;\n","import AmountControl from './AmountControl';\n\nexport default AmountControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AmountControl from '../AmountControl';\nimport Button from '../Button';\nimport { currencyFormat } from '../../utils/helper';\nimport { route } from '../../utils/config';\nimport './styles.sass';\n\nconst ProductDescription = ({\n    id,\n    name,\n    image,\n    thumb,\n    price,\n    brand,\n    category: { name: categoryName },\n    description,\n    pickup,\n    tremolo,\n    onAddToCart,\n    onRemoveFromCart,\n    cartItemAmount\n}) => (\n    <div className=\"product-description\">\n        <div className=\"product-description__body\">\n            <div className=\"product-description__image\">\n                <img src={image} alt={name} />\n            </div>\n\n            <div className=\"product-description__content\">\n                <table className=\"product-description__features\">\n                    <tbody>\n                        <tr>\n                            <td className=\"product-description__features-title\">Pickup:</td>\n                            <td className=\"product-description__features-content\">\n                                <p>{pickup.name}</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"product-description__features-title\">Tremolo:</td>\n                            <td className=\"product-description__features-content\">\n                                <p>{tremolo.name}</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"product-description__features-title\">Brand:</td>\n                            <td className=\"product-description__features-content\">\n                                <img\n                                    className=\"product-description__brand\"\n                                    src={brand.image}\n                                    alt={brand.name}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"product-description__features-title\">Category:</td>\n                            <td className=\"product-description__features-content\">\n                                <p>{categoryName}</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"product-description__features-title\">Description:</td>\n                            <td className=\"product-description__features-content\">\n                                <p>{description}</p>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div className=\"product-description__price-box\">\n                    <p className=\"product-description__price\">{currencyFormat(price)}</p>\n                    <AmountControl\n                        amount={cartItemAmount(id)}\n                        onAddToCart={() =>\n                            onAddToCart({ id, name, thumb, price, category: categoryName })\n                        }\n                        onRemoveFromCart={() => onRemoveFromCart(id)}\n                    />\n                </div>\n            </div>\n        </div>\n\n        <div className=\"space-between margin-top\">\n            <Button back linkTo={route.catalog.link}>\n                Continue shopping\n            </Button>\n            <Button main linkTo={route.cart.link}>\n                Go to cart\n            </Button>\n        </div>\n    </div>\n);\n\nProductDescription.defaultName = 'ProductDescription';\nProductDescription.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    category: PropTypes.shape({\n        name: PropTypes.string\n    }).isRequired,\n    thumb: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    brand: PropTypes.shape({\n        image: PropTypes.string,\n        name: PropTypes.string\n    }).isRequired,\n    description: PropTypes.string.isRequired,\n    pickup: PropTypes.shape({\n        image: PropTypes.string,\n        name: PropTypes.string\n    }).isRequired,\n    tremolo: PropTypes.shape({\n        image: PropTypes.string,\n        name: PropTypes.string\n    }).isRequired,\n    onAddToCart: PropTypes.func.isRequired,\n    onRemoveFromCart: PropTypes.func.isRequired,\n    cartItemAmount: PropTypes.func.isRequired\n};\n\nexport default ProductDescription;\n","import ProductDescription from './ProductDescription';\n\nexport default ProductDescription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { route } from '../../utils/config';\nimport ProductDescription from '../../components/ProductDescription';\nimport Breadcrumbs from '../../components/Breadcrumbs';\nimport { productByIdSelector } from '../../redux/products/selectors';\nimport { cartItemAmountSelector } from '../../redux/cart/selectors';\nimport { addItemToCart, removeItemFromCart } from '../../redux/cart/actions';\n\nclass Product extends React.Component {\n    render() {\n        const {\n            match,\n            productById,\n            addItemToCart,\n            removeItemFromCart,\n            cartItemAmount\n        } = this.props;\n\n        const productData = { ...productById(match.params.id) };\n\n        return (\n            <>\n                <Breadcrumbs crumbs={[['Catalog', route.catalog.link], [productData.name]]} />\n                <h1 className=\"main-subtitle\">{productData.name}</h1>\n                <ProductDescription\n                    cartItemAmount={cartItemAmount}\n                    onAddToCart={addItemToCart}\n                    onRemoveFromCart={removeItemFromCart}\n                    {...productData}\n                />\n            </>\n        );\n    }\n}\n\nProduct.defaultName = 'Product';\nProduct.propTypes = {\n    addItemToCart: PropTypes.func.isRequired,\n    removeItemFromCart: PropTypes.func.isRequired,\n    productById: PropTypes.func.isRequired,\n    cartItemAmount: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addItemToCart: product => dispatch(addItemToCart(product)),\n    removeItemFromCart: id => dispatch(removeItemFromCart(id))\n});\n\nconst mapStateToProps = store => ({\n    productById: id => productByIdSelector(id, store),\n    cartItemAmount: id => cartItemAmountSelector(id, store)\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Product);\n","import Product from './Product';\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { route } from '../../utils/config';\nimport './styles.sass';\n\nconst Breadcrumbs = ({ crumbs }) => (\n    <ul className=\"breadcrumbs\">\n        <li className=\"breadcrumbs__item breadcrumbs__item--home\">\n            <Link className=\"breadcrumbs__item-link\" to={route.home.link}>\n                Home\n            </Link>\n        </li>\n        {crumbs.map((item, index) =>\n            crumbs.length - 1 === index ? (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    {item[0]}\n                </li>\n            ) : (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    <Link className=\"breadcrumbs__item-link\" to={item[1]}>\n                        {item[0]}\n                    </Link>\n                </li>\n            )\n        )}\n    </ul>\n);\n\nBreadcrumbs.defaultName = 'Breadcrumbs';\nBreadcrumbs.propTypes = {\n    crumbs: PropTypes.array.isRequired\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n"],"sourceRoot":""}