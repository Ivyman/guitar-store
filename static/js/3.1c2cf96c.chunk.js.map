{"version":3,"sources":["components/AmountControl/AmountControl.js","components/AmountControl/index.js","components/ThumbnailBox/ThumbnailBox.js","components/ThumbnailBox/index.js","components/SummaryList/SummaryList.js","components/SummaryList/index.js","components/Select/Select.js","components/Select/index.js","components/LoadBar/LoadBar.js","components/LoadBar/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/CheckoutForm/CheckoutForm.js","components/CheckoutForm/index.js","components/CheckoutSettings/CheckoutSettings.js","components/CheckoutSettings/index.js","containers/Checkout/Checkout.js","containers/Checkout/index.js","components/Breadcrumbs/Breadcrumbs.js","components/Breadcrumbs/index.js"],"names":["AmountControl","amount","small","onAddToCart","onRemoveFromCart","list","className","onClick","defaultName","defaultProps","ThumbnailBox","thumb","name","category","productId","src","alt","to","route","product","link","target","SummaryList","rwd","cartItems","onRemoveAllItemsFromCart","orders","map","order","key","id","quantity","currencyFormat","totalItemPrice","colSpan","totalPrice","NoData","message","price","Select","children","value","onChange","merge","hasError","LoadBar","appearance","width","height","viewBox","preserveAspectRatio","ng-attr-id","x","y","d","fill","ng-attr-stroke","strokeWidth","stroke","ng-attr-clip-path","clipPath","transform","ng-attr-fill","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","TypeError","CheckoutForm","onSettingsChange","fieldsWithError","useState","email","phone","payment","delivery","country","postcode","city","address","checkoutForm","setCheckoutForm","handleInputChange","event","field","useEffect","onSubmit","preventDefault","includes","placeholder","paymentMethods","method","htmlFor","disabled","deliveryServices","item","CheckoutSettings","hasFormError","Checkout","state","settingsForm","showThrobber","handleSettingsChange","fields","setState","handlePayClick","checkoutData","entries","forEach","formValidate","props","setSummaryData","setTimeout","history","summary","scrollTop","this","Breadcrumbs","crumbs","Button","back","linkTo","catalog","main","React","Component","connect","store","cartItemsSelector","dispatch","summaryData","home","index"],"mappings":"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","file":"static/js/3.1c2cf96c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.sass';\n\nconst AmountControl = ({ amount, small, onAddToCart, onRemoveFromCart, list }) => (\n    <div\n        className={`amount-control ${small ? 'amount-control--small' : ''} ${\n            list ? 'amount-control--list' : ''\n        }`}\n    >\n        {amount ? (\n            <>\n                <button onClick={onRemoveFromCart} className=\"amount-control__minus\">\n                    -\n                </button>\n                <span className=\"amount-control__number\">{amount}</span>\n                <button onClick={onAddToCart} className=\"amount-control__plus\">\n                    +\n                </button>\n            </>\n        ) : (\n            <button onClick={onAddToCart} className=\"amount-control__add\">\n                Add to cart\n            </button>\n        )}\n    </div>\n);\n\nAmountControl.defaultName = 'AmountControl';\nAmountControl.propTypes = {\n    onAddToCart: PropTypes.func.isRequired,\n    onRemoveFromCart: PropTypes.func.isRequired,\n    amount: PropTypes.number,\n    small: PropTypes.bool,\n    list: PropTypes.bool\n};\nAmountControl.defaultProps = {\n    amount: 0,\n    small: false,\n    list: false\n};\n\nexport default AmountControl;\n","import AmountControl from './AmountControl';\n\nexport default AmountControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { route } from '../../utils/config';\nimport './styles.sass';\n\nconst ThumbnailBox = ({ thumb, name, category, productId, small, amount }) => (\n    <div className={`thumbnail-box ${small ? 'thumbnail-box--small' : ''}`}>\n        <div className=\"thumbnail-box__image\">\n            {amount !== 0 && <span className=\"thumbnail-box__item-amount\">{amount}</span>}\n            <img src={thumb} alt={name} />\n        </div>\n        <div className=\"thumbnail-box__content\">\n            <Link\n                className=\"thumbnail-box__title\"\n                to={route.product.link(productId)}\n                target=\"_blank\"\n            >\n                {name}\n            </Link>\n            <p className=\"thumbnail-box__category\">{category}</p>\n        </div>\n    </div>\n);\n\nThumbnailBox.defaultName = 'ThumbnailBox';\nThumbnailBox.propTypes = {\n    thumb: PropTypes.string,\n    name: PropTypes.string,\n    category: PropTypes.string,\n    productId: PropTypes.number,\n    small: PropTypes.bool,\n    amount: PropTypes.number\n};\nThumbnailBox.defaultProps = {\n    thumb: '',\n    name: 'Thumbnail',\n    category: 'No category',\n    productId: 0,\n    small: false,\n    amount: 0\n};\n\nexport default ThumbnailBox;\n","import ThumbnailBox from './ThumbnailBox';\n\nexport default ThumbnailBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ThumbnailBox from '../ThumbnailBox';\nimport AmountControl from '../AmountControl';\nimport NoData from '../NoData';\nimport { currencyFormat } from '../../utils/helper';\nimport './styles.sass';\n\nconst SummaryList = ({\n    rwd,\n    cartItems,\n    small,\n    onAddToCart,\n    onRemoveFromCart,\n    onRemoveAllItemsFromCart\n}) => (\n    <div className={`summary-list ${rwd ? 'summary-list--rwd' : ''}`}>\n        {small &&\n            (cartItems.amount ? (\n                <table className=\"summary-list__table\">\n                    <tbody>\n                        {cartItems.orders.map(order => (\n                            <tr key={order.id}>\n                                <td>\n                                    <ThumbnailBox\n                                        small\n                                        amount={order.quantity}\n                                        productId={order.id}\n                                        name={order.name}\n                                        thumb={order.thumb}\n                                        category={order.category}\n                                    />\n                                </td>\n                                <td>{currencyFormat(order.totalItemPrice)}</td>\n                            </tr>\n                        ))}\n                        <tr className=\"summary-list__summary summary-list__summary--small\">\n                            <td colSpan=\"2\">\n                                Summary:{' '}\n                                <span className=\"summary-list__summary-price\">\n                                    {currencyFormat(cartItems.totalPrice)}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            ) : (\n                <NoData message=\"Add some items to your cart!\" />\n            ))}\n\n        {!small &&\n            (cartItems.amount ? (\n                <table className=\"summary-list__table\">\n                    <tbody>\n                        {cartItems.orders.map(order => (\n                            <tr key={order.id}>\n                                <td>\n                                    <ThumbnailBox\n                                        productId={order.id}\n                                        name={order.name}\n                                        thumb={order.thumb}\n                                        category={order.category}\n                                    />\n                                </td>\n                                <td>\n                                    <AmountControl\n                                        small\n                                        amount={order.quantity}\n                                        onAddToCart={() =>\n                                            onAddToCart({\n                                                id: order.id,\n                                                name: order.name,\n                                                thumb: order.thumb,\n                                                price: order.price,\n                                                category: order.category.name\n                                            })\n                                        }\n                                        onRemoveFromCart={() => onRemoveFromCart(order.id)}\n                                    />\n                                </td>\n                                <td>{currencyFormat(order.totalItemPrice)}</td>\n                                <td className=\"text-center\">\n                                    <button\n                                        onClick={() => onRemoveAllItemsFromCart(order.id)}\n                                        className=\"close-button close-button--small\"\n                                    />\n                                </td>\n                            </tr>\n                        ))}\n                        <tr className=\"summary-list__summary\">\n                            <td colSpan=\"4\">\n                                Summary:{' '}\n                                <span className=\"summary-list__summary-price\">\n                                    {currencyFormat(cartItems.totalPrice)}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            ) : (\n                <NoData message=\"Your cart is empty\" />\n            ))}\n    </div>\n);\n\nSummaryList.defaultName = 'SummaryList';\nSummaryList.propTypes = {\n    onAddToCart: PropTypes.func,\n    onRemoveFromCart: PropTypes.func,\n    onRemoveAllItemsFromCart: PropTypes.func,\n    cartItems: PropTypes.shape({\n        amount: PropTypes.number,\n        orders: PropTypes.array,\n        totalPrice: PropTypes.number\n    }),\n    small: PropTypes.bool,\n    rwd: PropTypes.bool\n};\nSummaryList.defaultProps = {\n    onAddToCart: null,\n    onRemoveFromCart: null,\n    onRemoveAllItemsFromCart: null,\n    cartItems: {\n        amount: 0,\n        orders: [],\n        totalPrice: 0\n    },\n    rwd: false,\n    small: false\n};\n\nexport default SummaryList;\n","import SummaryList from './SummaryList';\n\nexport default SummaryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.sass';\n\nconst Select = ({ children, value, onChange, name, merge, hasError }) => (\n    <label className={`select ${merge ? 'select--merge' : ''} ${hasError ? 'select--error' : ''}`}>\n        <select name={name} value={value} onChange={onChange}>\n            {children}\n        </select>\n    </label>\n);\n\nSelect.defaultName = 'Select';\nSelect.propTypes = {\n    children: PropTypes.array.isRequired,\n    value: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    merge: PropTypes.bool,\n    hasError: PropTypes.bool\n};\nSelect.defaultProps = {\n    name: 'Select',\n    merge: false,\n    hasError: false\n};\n\nexport default Select;\n","import Select from './Select';\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.sass';\n\nconst LoadBar = ({ message, appearance }) => (\n    <div className={`throbber  ${appearance ? 'throbber--appearance' : ''}`}>\n        <p className=\"throbber__message\">{message}</p>\n        <svg width=\"100px\" height=\"30px\" viewBox=\"0 35 100 30\" preserveAspectRatio=\"xMidYMid\">\n            <defs>\n                <clipPath\n                    ng-attr-id=\"{{config.cpid}}\"\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"100\"\n                    height=\"100\"\n                    id=\"lds-colorbar-cpid-9d2a9cfa91489\"\n                >\n                    <path d=\"M81.3,58.7H18.7c-4.8,0-8.7-3.9-8.7-8.7v0c0-4.8,3.9-8.7,8.7-8.7h62.7c4.8,0,8.7,3.9,8.7,8.7v0C90,54.8,86.1,58.7,81.3,58.7z\" />\n                </clipPath>\n            </defs>\n            <path\n                fill=\"none\"\n                ng-attr-stroke=\"{{config.cf}}\"\n                strokeWidth=\"2.7928\"\n                d=\"M82,63H18c-7.2,0-13-5.8-13-13v0c0-7.2,5.8-13,13-13h64c7.2,0,13,5.8,13,13v0C95,57.2,89.2,63,82,63z\"\n                stroke=\"#5d5d5d\"\n            />\n            <g\n                ng-attr-clip-path=\"url(#{{config.cpid}})\"\n                clipPath=\"url(#lds-colorbar-cpid-9d2a9cfa91489)\"\n            >\n                <g transform=\"translate(7.1254 0)\">\n                    <rect\n                        x=\"-100\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c1}}\"\n                        fill=\"#f47e60\"\n                    />\n                    <rect\n                        x=\"-75\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c2}}\"\n                        fill=\"#f8b26a\"\n                    />\n                    <rect\n                        x=\"-50\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c3}}\"\n                        fill=\"#abbd81\"\n                    />\n                    <rect\n                        x=\"-25\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c4}}\"\n                        fill=\"#849b87\"\n                    />\n                    <rect\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c1}}\"\n                        fill=\"#f47e60\"\n                    />\n                    <rect\n                        x=\"25\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c2}}\"\n                        fill=\"#f8b26a\"\n                    />\n                    <rect\n                        x=\"50\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c3}}\"\n                        fill=\"#abbd81\"\n                    />\n                    <rect\n                        x=\"75\"\n                        y=\"0\"\n                        width=\"25\"\n                        height=\"100\"\n                        ng-attr-fill=\"{{config.c4}}\"\n                        fill=\"#849b87\"\n                    />\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"translate\"\n                        calcMode=\"linear\"\n                        values=\"0;100\"\n                        keyTimes=\"0;1\"\n                        dur=\"1s\"\n                        begin=\"0s\"\n                        repeatCount=\"indefinite\"\n                    />\n                </g>\n            </g>\n        </svg>\n    </div>\n);\n\nLoadBar.defaultName = 'LoadBar';\nLoadBar.propTypes = {\n    message: PropTypes.string,\n    appearance: PropTypes.bool\n};\nLoadBar.defaultProps = {\n    message: 'Loading...',\n    appearance: false\n};\n\nexport default LoadBar;\n","import LoadBar from './LoadBar';\n\nexport default LoadBar;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '../../components/Select';\nimport { deliveryServices, paymentMethods } from '../../utils/config';\nimport './styles.sass';\n\nconst CheckoutForm = ({ onSettingsChange, hasError, fieldsWithError }) => {\n    const [checkoutForm, setCheckoutForm] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        payment: '',\n        delivery: '',\n        country: '',\n        postcode: '',\n        city: '',\n        address: ''\n    });\n\n    const handleInputChange = (event, field) => {\n        setCheckoutForm({ ...checkoutForm, [field]: event.target.value });\n    };\n\n    useEffect(() => onSettingsChange(checkoutForm), [checkoutForm]);\n\n    return (\n        <form className=\"checkout-form\" onSubmit={event => event.preventDefault()}>\n            {hasError && (\n                <p className=\"checkout-form__error\">Fill in correctly all fields below!</p>\n            )}\n            <fieldset className=\"checkout-form__fieldset\">\n                <legend className=\"checkout-form__legend\">Contact information</legend>\n                <input\n                    className={`input ${fieldsWithError.includes('name') ? 'input--error' : ''}`}\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={checkoutForm.name}\n                    onChange={event => handleInputChange(event, 'name')}\n                />\n                <input\n                    className={`input ${fieldsWithError.includes('email') ? 'input--error' : ''}`}\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={checkoutForm.email}\n                    onChange={event => handleInputChange(event, 'email')}\n                />\n                <input\n                    className={`input ${fieldsWithError.includes('phone') ? 'input--error' : ''}`}\n                    name=\"phone\"\n                    type=\"tel\"\n                    placeholder=\"Phone\"\n                    value={checkoutForm.phone}\n                    onChange={event => handleInputChange(event, 'phone')}\n                />\n            </fieldset>\n\n            <fieldset className=\"checkout-form__fieldset\">\n                <legend className=\"checkout-form__legend\">Payment method</legend>\n                <div\n                    className={`radio-boxes ${\n                        fieldsWithError.includes('payment') ? 'radio-boxes--error' : ''\n                    }`}\n                >\n                    {paymentMethods.map(method => (\n                        <span\n                            key={method.value}\n                            className={`radio-boxes__item radio-boxes__item--${method.value}`}\n                        >\n                            <input\n                                id={method.value}\n                                name=\"payment\"\n                                type=\"radio\"\n                                value={method.value}\n                                onChange={event => handleInputChange(event, 'payment')}\n                            />\n                            <label htmlFor={method.value}>{method.name}</label>\n                        </span>\n                    ))}\n                </div>\n            </fieldset>\n\n            <fieldset className=\"checkout-form__fieldset\">\n                <legend className=\"checkout-form__legend\">Delivery option</legend>\n                <Select\n                    hasError={fieldsWithError.includes('delivery')}\n                    name=\"delivery\"\n                    value={checkoutForm.delivery}\n                    onChange={event => handleInputChange(event, 'delivery')}\n                >\n                    <option value=\"\" disabled>\n                        Select delivery\n                    </option>\n                    {deliveryServices.map(item => (\n                        <option key={item.value} value={item.value}>\n                            {item.name}\n                        </option>\n                    ))}\n                </Select>\n            </fieldset>\n\n            <fieldset className=\"checkout-form__fieldset\">\n                <legend className=\"checkout-form__legend\">Delivery address</legend>\n                <input\n                    type=\"text\"\n                    className={`input ${fieldsWithError.includes('country') ? 'input--error' : ''}`}\n                    name=\"country\"\n                    placeholder=\"Country\"\n                    value={checkoutForm.country}\n                    onChange={event => handleInputChange(event, 'country')}\n                />\n                <input\n                    type=\"number\"\n                    className={`input ${\n                        fieldsWithError.includes('postcode') ? 'input--error' : ''\n                    }`}\n                    name=\"postcode\"\n                    placeholder=\"Postcode\"\n                    value={checkoutForm.postcode}\n                    onChange={event => handleInputChange(event, 'postcode')}\n                />\n                <input\n                    type=\"text\"\n                    className={`input ${fieldsWithError.includes('city') ? 'input--error' : ''}`}\n                    name=\"city\"\n                    placeholder=\"City\"\n                    value={checkoutForm.city}\n                    onChange={event => handleInputChange(event, 'city')}\n                />\n                <input\n                    className={`input ${fieldsWithError.includes('address') ? 'input--error' : ''}`}\n                    name=\"address\"\n                    type=\"text\"\n                    placeholder=\"Address\"\n                    value={checkoutForm.address}\n                    onChange={event => handleInputChange(event, 'address')}\n                />\n            </fieldset>\n        </form>\n    );\n};\n\nCheckoutForm.defaultName = 'CheckoutForm';\nCheckoutForm.propTypes = {\n    onSettingsChange: PropTypes.func.isRequired,\n    hasError: PropTypes.bool,\n    fieldsWithError: PropTypes.array\n};\nCheckoutForm.defaultProps = {\n    hasError: false,\n    fieldsWithError: []\n};\n\nexport default CheckoutForm;\n","import CheckoutForm from './CheckoutForm';\n\nexport default CheckoutForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckoutForm from '../../components/CheckoutForm';\nimport './styles.sass';\n\nconst CheckoutSettings = ({ onSettingsChange, hasFormError, fieldsWithError }) => (\n    <CheckoutForm\n        onSettingsChange={onSettingsChange}\n        hasError={hasFormError}\n        fieldsWithError={fieldsWithError}\n    />\n);\n\nCheckoutSettings.defaultName = 'CheckoutSettings';\nCheckoutSettings.propTypes = {\n    onSettingsChange: PropTypes.func.isRequired,\n    hasFormError: PropTypes.bool,\n    fieldsWithError: PropTypes.array\n};\nCheckoutSettings.defaultProps = {\n    hasFormError: false,\n    fieldsWithError: []\n};\n\nexport default CheckoutSettings;\n","import CheckoutSettings from './CheckoutSettings';\n\nexport default CheckoutSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { cartItemsSelector } from '../../redux/cart/selectors';\nimport { route } from '../../utils/config';\nimport { scrollTop } from '../../utils/helper';\nimport { formValidate } from '../../utils/helper';\nimport LoadBar from '../../components/LoadBar';\nimport Breadcrumbs from '../../components/Breadcrumbs';\nimport CheckoutSettings from '../../components/CheckoutSettings';\nimport SummaryList from '../../components/SummaryList';\nimport Button from '../../components/Button';\nimport { setSummaryData } from '../../redux/summary/actions';\n\nclass Checkout extends React.Component {\n    state = { settingsForm: {}, fieldsWithError: [], hasFormError: false, showThrobber: false };\n\n    handleSettingsChange = fields => {\n        this.setState({ settingsForm: { ...fields }, fieldsWithError: [], hasFormError: false });\n    };\n\n    handlePayClick = () => {\n        let checkoutData = {};\n        let fieldsWithError = [];\n\n        Object.entries(this.state.settingsForm).forEach(item => {\n            fieldsWithError.push(!item[1].length && item[0]);\n            checkoutData[item[0]] = item[1];\n        });\n\n        if (formValidate(this.state.settingsForm)) {\n            this.setState({ showThrobber: true });\n\n            this.props.setSummaryData(checkoutData);\n            setTimeout(() => this.props.history.push(route.summary.link), 2000);\n        } else {\n            this.setState(\n                {\n                    hasFormError: true,\n                    fieldsWithError: fieldsWithError\n                },\n                () => scrollTop(true)\n            );\n        }\n    };\n\n    render() {\n        const { cartItems } = this.props;\n        const { hasFormError, showThrobber, fieldsWithError } = this.state;\n\n        return (\n            <>\n                <Breadcrumbs crumbs={[['Checkout']]} />\n                <h1 className=\"main-subtitle\">Checkout</h1>\n\n                {showThrobber ? (\n                    <LoadBar appearance message=\"Payment loading...\" />\n                ) : (\n                    <>\n                        <div className=\"columns\">\n                            <CheckoutSettings\n                                fieldsWithError={fieldsWithError}\n                                hasFormError={hasFormError}\n                                onSettingsChange={this.handleSettingsChange}\n                            />\n                            <SummaryList small cartItems={cartItems} />\n                        </div>\n                        <div className=\"space-between margin-top\">\n                            <Button back linkTo={route.catalog.link}>\n                                Continue shopping\n                            </Button>\n                            {cartItems.amount !== 0 && (\n                                <Button main onClick={this.handlePayClick}>\n                                    Pay\n                                </Button>\n                            )}\n                        </div>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nCheckout.defaultName = 'Checkout';\nCheckout.propTypes = {\n    setSummaryData: PropTypes.func.isRequired,\n    cartItems: PropTypes.shape({\n        amount: PropTypes.number,\n        orders: PropTypes.array,\n        totalPrice: PropTypes.number\n    }).isRequired,\n    history: PropTypes.object.isRequired\n};\nCheckout.defaultProps = {\n    amount: 0,\n    orders: [],\n    totalPrice: 0\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setSummaryData: summaryData => dispatch(setSummaryData(summaryData))\n});\n\nconst mapStateToProps = store => ({\n    cartItems: cartItemsSelector(store)\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Checkout);\n","import Checkout from './Checkout';\n\nexport default Checkout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { route } from '../../utils/config';\nimport './styles.sass';\n\nconst Breadcrumbs = ({ crumbs }) => (\n    <ul className=\"breadcrumbs\">\n        <li className=\"breadcrumbs__item breadcrumbs__item--home\">\n            <Link className=\"breadcrumbs__item-link\" to={route.home.link}>\n                Home\n            </Link>\n        </li>\n        {crumbs.map((item, index) =>\n            crumbs.length - 1 === index ? (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    {item[0]}\n                </li>\n            ) : (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    <Link className=\"breadcrumbs__item-link\" to={item[1]}>\n                        {item[0]}\n                    </Link>\n                </li>\n            )\n        )}\n    </ul>\n);\n\nBreadcrumbs.defaultName = 'Breadcrumbs';\nBreadcrumbs.propTypes = {\n    crumbs: PropTypes.array.isRequired\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n"],"sourceRoot":""}