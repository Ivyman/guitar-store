{"version":3,"sources":["redux/filters/actions.js","components/CategoryBox/CategoryBox.js","components/CategoryBox/index.js","components/Categories/Categories.js","components/Categories/index.js","containers/Home/Home.js","containers/Home/index.js"],"names":["setFilters","filterData","type","types","clearFilters","CategoryBox","name","image","className","src","alt","defaultName","defaultProps","Categories","categories","onChoseCategory","length","map","category","key","id","onClick","NoData","Home","handleChoseCategory","categoryId","props","history","value","target","push","route","catalog","link","this","React","Component","connect","store","categoriesSelector","dispatch"],"mappings":"oGAAA,gFAEaA,EAAa,SAAAC,GAAU,MAAK,CACrCC,KAAMC,IACNF,WAAYA,IAGHG,EAAe,iBAAO,CAAEF,KAAMC,O,wLCHrCE,G,OAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAChB,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,sBAAsBC,IAAKF,EAAOG,IAAKJ,IACtD,wBAAIE,UAAU,sBAAsBF,MAI5CD,EAAYM,YAAc,cAK1BN,EAAYO,aAAe,CACvBN,KAAM,oBACNC,MAAO,MAGIF,ICnBAA,EDmBAA,EEfTQ,G,OAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,gBAAf,OACf,yBAAKP,UAAS,qBAAiBM,EAAWE,OAAiC,GAAxB,wBAC9CF,EAAWE,OACRF,EAAWG,KAAI,SAAAC,GAAQ,OACnB,yBACIV,UAAU,mBACVW,IAAKD,EAASE,GACdC,QAAS,kBAAMN,EAAgBG,EAASE,MAExC,kBAAC,EAAgBF,OAIzB,kBAACI,EAAA,EAAD,SAKZT,EAAWF,YAAc,aAKzBE,EAAWD,aAAe,CACtBE,WAAY,IAGDD,IC/BAA,ED+BAA,EEzBTU,E,2MACFC,oBAAsB,SAAAC,GAAe,IAAD,EACc,EAAKC,MAA3C1B,EADwB,EACxBA,WAAYI,EADY,EACZA,aAAcuB,EADF,EACEA,QAElCvB,IACAJ,EAAW,CAAE4B,OAAO,EAAMC,OAAQ,CAAC,WAAYJ,KAC/CE,EAAQG,KAAKC,IAAMC,QAAQC,O,wEAGrB,IACEnB,EAAeoB,KAAKR,MAApBZ,WAER,OACI,oCACI,uBAAGN,UAAU,6BAAb,wBACA,kBAAC,EAAD,CAAYM,WAAYA,EAAYC,gBAAiBmB,KAAKV,2B,GAfvDW,IAAMC,WAqBzBb,EAAKZ,YAAc,OAOnBY,EAAKX,aAAe,CAChBE,WAAY,IAGhB,IASeuB,eATS,SAAAC,GAAK,MAAK,CAC9BxB,WAAYyB,YAAmBD,OAGR,SAAAE,GAAQ,MAAK,CACpCxC,WAAY,SAAAC,GAAU,OAAIuC,EAASxC,YAAWC,KAC9CG,aAAc,kBAAMoC,EAASpC,mBAGlBiC,CAGbd,GClDaA","file":"static/js/8.ca20be54.chunk.js","sourcesContent":["import * as types from './types';\n\nexport const setFilters = filterData => ({\n    type: types.SET_FILTERS,\n    filterData: filterData\n});\n\nexport const clearFilters = () => ({ type: types.CLEAR_FILTERS });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.sass';\n\nconst CategoryBox = ({ name, image }) => (\n    <div className=\"category-box\">\n        <img className=\"category-box__image\" src={image} alt={name} />\n        <h3 className=\"category-box__name\">{name}</h3>\n    </div>\n);\n\nCategoryBox.defaultName = 'CategoryBox';\nCategoryBox.propTypes = {\n    name: PropTypes.string,\n    image: PropTypes.string\n};\nCategoryBox.defaultProps = {\n    name: 'Category box item',\n    image: null\n};\n\nexport default CategoryBox;\n","import CategoryBox from './CategoryBox';\n\nexport default CategoryBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NoData from '../NoData';\nimport CategoryBox from '../CategoryBox';\nimport './styles.sass';\n\nconst Categories = ({ categories, onChoseCategory }) => (\n    <div className={`categories ${!categories.length ? 'categories--no-data' : ''}`}>\n        {categories.length ? (\n            categories.map(category => (\n                <div\n                    className=\"categories__item\"\n                    key={category.id}\n                    onClick={() => onChoseCategory(category.id)}\n                >\n                    <CategoryBox {...category} />\n                </div>\n            ))\n        ) : (\n            <NoData />\n        )}\n    </div>\n);\n\nCategories.defaultName = 'Categories';\nCategories.propTypes = {\n    onChoseCategory: PropTypes.func.isRequired,\n    categories: PropTypes.array\n};\nCategories.defaultProps = {\n    categories: []\n};\n\nexport default Categories;\n","import Categories from './Categories';\n\nexport default Categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { categoriesSelector } from '../../redux/settings/selectors';\nimport { setFilters, clearFilters } from '../../redux/filters/actions';\nimport { route } from '../../utils/config';\nimport Categories from '../../components/Categories';\n\nclass Home extends React.Component {\n    handleChoseCategory = categoryId => {\n        const { setFilters, clearFilters, history } = this.props;\n\n        clearFilters();\n        setFilters({ value: true, target: ['category', categoryId] });\n        history.push(route.catalog.link);\n    };\n\n    render() {\n        const { categories } = this.props;\n\n        return (\n            <>\n                <p className=\"main-subtitle text-center\">Or chose by category</p>\n                <Categories categories={categories} onChoseCategory={this.handleChoseCategory} />\n            </>\n        );\n    }\n}\n\nHome.defaultName = 'Home';\nHome.propTypes = {\n    setFilters: PropTypes.func.isRequired,\n    clearFilters: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired,\n    categories: PropTypes.array\n};\nHome.defaultProps = {\n    categories: []\n};\n\nconst mapStateToProps = store => ({\n    categories: categoriesSelector(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setFilters: filterData => dispatch(setFilters(filterData)),\n    clearFilters: () => dispatch(clearFilters())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n","import Home from './Home';\n\nexport default Home;\n"],"sourceRoot":""}