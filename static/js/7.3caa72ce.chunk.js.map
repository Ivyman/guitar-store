{"version":3,"sources":["redux/summary/selectors.js","components/SummarySheet/SummarySheet.js","components/SummarySheet/index.js","containers/Summary/Summary.js","containers/Summary/index.js","components/Breadcrumbs/Breadcrumbs.js","components/Breadcrumbs/index.js"],"names":["summaryDataSelector","store","summary","SummarySheet","data","cartItems","summaryData","className","name","paymentMethods","find","item","value","payment","colSpan","email","country","postcode","deliveryServices","delivery","address","city","phone","orders","map","order","key","id","quantity","currencyFormat","totalItemPrice","totalPrice","Button","main","linkTo","route","catalog","link","defaultName","Summary","this","props","amount","Breadcrumbs","crumbs","NoData","message","React","PureComponent","defaultProps","connect","cartItemsSelector","to","home","index","length"],"mappings":"6MAAMA,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,S,+BCOrCC,G,OAAe,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,YAAtB,OACjB,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,wBACf,wBAAIA,UAAU,wBAAd,iBAEA,2BAAOA,UAAU,wBACb,+BACI,4BACI,mDACA,gDAGR,+BACI,4BACI,4BAAKD,EAAYE,MACjB,4BAAKC,IAAeC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,QAAUN,EAAYO,WAASL,OAEzE,4BACI,wBAAIM,QAAQ,KAAKR,EAAYS,UAKzC,2BAAOR,UAAU,wBACb,+BACI,4BACI,gDACA,iDAGR,+BACI,4BACI,4BACKD,EAAYU,QADjB,KAC4BV,EAAYW,UAExC,4BACKC,IAAiBR,MAAK,SAAAC,GAAI,OAAIA,EAAKC,QAAUN,EAAYa,YAAUX,OAG5E,4BACI,wBAAIM,QAAQ,KACPR,EAAYc,QADjB,KAC4Bd,EAAYe,OAG5C,4BACI,4BAAKf,EAAYgB,UAK7B,2BAAOf,UAAU,wBACb,+BACI,4BACI,wBAAIO,QAAQ,KAAZ,cAGR,+BACKT,EAAUkB,OAAOC,KAAI,SAAAC,GAAK,OACvB,wBAAIC,IAAKD,EAAME,IACX,4BAAKF,EAAMjB,MACX,4BAAKiB,EAAMG,UACX,4BAAKC,YAAeJ,EAAMK,sBAItC,+BACI,4BACI,wBAAIhB,QAAQ,IAAIP,UAAU,gCAA1B,YACa,8BAAOsB,YAAexB,EAAU0B,iBAMzD,yBAAKxB,UAAU,eACX,kBAACyB,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAQC,IAAMC,QAAQC,MAAnC,uBAOZlC,EAAamC,YAAc,cAYZnC,ICnGAA,EDmGAA,E,QE5FToC,E,iLACQ,IAAD,EAC8BC,KAAKC,MAAhCpC,EADH,EACGA,UAAWC,EADd,EACcA,YAEnB,OACI,oCACKD,EAAUqC,OACP,oCACI,kBAACC,EAAA,EAAD,CAAaC,OAAQ,CAAC,CAAC,cACvB,wBAAIrC,UAAU,6BAAd,qCAGA,kBAAC,EAAD,CAAcH,KAAM,CAAEC,YAAWC,kBAGrC,kBAACuC,EAAA,EAAD,CAAQC,QAAQ,sC,GAfdC,IAAMC,eAsB5BT,EAAQD,YAAc,UAStBC,EAAQU,aAAe,CACnB5C,UAAW,CACPqC,OAAQ,EACRnB,OAAQ,GACRQ,WAAY,GAEhBzB,YAAa,IAGjB,IAKe4C,eALS,SAAAjD,GAAK,MAAK,CAC9BI,UAAW8C,YAAkBlD,GAC7BK,YAAaN,EAAoBC,MAGtBiD,CAAyBX,GCpDzBA,a,uFCITI,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAChB,wBAAIrC,UAAU,eACV,wBAAIA,UAAU,6CACV,kBAAC,IAAD,CAAMA,UAAU,yBAAyB6C,GAAIjB,IAAMkB,KAAKhB,MAAxD,SAIHO,EAAOpB,KAAI,SAACb,EAAM2C,GAAP,OACRV,EAAOW,OAAS,IAAMD,EAClB,wBAAI/C,UAAU,oBAAoBmB,IAAKf,EAAK,IACvCA,EAAK,IAGV,wBAAIJ,UAAU,oBAAoBmB,IAAKf,EAAK,IACxC,kBAAC,IAAD,CAAMJ,UAAU,yBAAyB6C,GAAIzC,EAAK,IAC7CA,EAAK,WAQ9BgC,EAAYL,YAAc,cAKXK,QChCAA","file":"static/js/7.3caa72ce.chunk.js","sourcesContent":["const summaryDataSelector = store => store.summary;\n\nexport { summaryDataSelector };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { route, paymentMethods, deliveryServices } from '../../utils/config';\nimport { currencyFormat } from '../../utils/helper';\nimport './styles.sass';\n\nconst SummarySheet = ({ data: { cartItems, summaryData } }) => (\n    <div className=\"summary-sheet\">\n        <div className=\"summary-sheet__hero\" />\n        <h2 className=\"summary-sheet__title\">Summary Sheet</h2>\n\n        <table className=\"summary-sheet__table\">\n            <thead>\n                <tr>\n                    <td>Contact information</td>\n                    <td>Payment method</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{summaryData.name}</td>\n                    <td>{paymentMethods.find(item => item.value === summaryData.payment).name}</td>\n                </tr>\n                <tr>\n                    <td colSpan=\"2\">{summaryData.email}</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <table className=\"summary-sheet__table\">\n            <thead>\n                <tr>\n                    <td>Delivery address</td>\n                    <td>Delivery option</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>\n                        {summaryData.country}, {summaryData.postcode}\n                    </td>\n                    <td>\n                        {deliveryServices.find(item => item.value === summaryData.delivery).name}\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan=\"2\">\n                        {summaryData.address}, {summaryData.city}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{summaryData.phone}</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <table className=\"summary-sheet__table\">\n            <thead>\n                <tr>\n                    <td colSpan=\"3\">Products</td>\n                </tr>\n            </thead>\n            <tbody>\n                {cartItems.orders.map(order => (\n                    <tr key={order.id}>\n                        <td>{order.name}</td>\n                        <td>{order.quantity}</td>\n                        <td>{currencyFormat(order.totalItemPrice)}</td>\n                    </tr>\n                ))}\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td colSpan=\"3\" className=\"summary-sheet__table-summary\">\n                        Summary: <span>{currencyFormat(cartItems.totalPrice)}</span>\n                    </td>\n                </tr>\n            </tfoot>\n        </table>\n\n        <div className=\"text-center\">\n            <Button main linkTo={route.catalog.link}>\n                Back to catalog\n            </Button>\n        </div>\n    </div>\n);\n\nSummarySheet.defaultName = 'SummaryList';\nSummarySheet.propTypes = {\n    data: PropTypes.shape({\n        cartItems: PropTypes.shape({\n            amount: PropTypes.number,\n            orders: PropTypes.array,\n            totalPrice: PropTypes.number\n        }).isRequired,\n        summaryData: PropTypes.object.isRequired\n    })\n};\n\nexport default SummarySheet;\n","import SummarySheet from './SummarySheet';\n\nexport default SummarySheet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { cartItemsSelector } from '../../redux/cart/selectors';\nimport { summaryDataSelector } from '../../redux/summary/selectors';\nimport NoData from '../../components/NoData';\nimport SummarySheet from '../../components/SummarySheet';\nimport Breadcrumbs from '../../components/Breadcrumbs';\n\nclass Summary extends React.PureComponent {\n    render() {\n        const { cartItems, summaryData } = this.props;\n\n        return (\n            <>\n                {cartItems.amount ? (\n                    <>\n                        <Breadcrumbs crumbs={[['Summary']]} />\n                        <h1 className=\"main-subtitle text-center\">\n                            Thank you for choosing our store!\n                        </h1>\n                        <SummarySheet data={{ cartItems, summaryData }} />\n                    </>\n                ) : (\n                    <NoData message=\"No any data for showing yet!\" />\n                )}\n            </>\n        );\n    }\n}\n\nSummary.defaultName = 'Summary';\nSummary.propTypes = {\n    cartItems: PropTypes.shape({\n        amount: PropTypes.number,\n        orders: PropTypes.array,\n        totalPrice: PropTypes.number\n    }),\n    summaryData: PropTypes.object\n};\nSummary.defaultProps = {\n    cartItems: {\n        amount: 0,\n        orders: [],\n        totalPrice: 0\n    },\n    summaryData: {}\n};\n\nconst mapStateToProps = store => ({\n    cartItems: cartItemsSelector(store),\n    summaryData: summaryDataSelector(store)\n});\n\nexport default connect(mapStateToProps)(Summary);\n","import Summary from './Summary';\n\nexport default Summary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { route } from '../../utils/config';\nimport './styles.sass';\n\nconst Breadcrumbs = ({ crumbs }) => (\n    <ul className=\"breadcrumbs\">\n        <li className=\"breadcrumbs__item breadcrumbs__item--home\">\n            <Link className=\"breadcrumbs__item-link\" to={route.home.link}>\n                Home\n            </Link>\n        </li>\n        {crumbs.map((item, index) =>\n            crumbs.length - 1 === index ? (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    {item[0]}\n                </li>\n            ) : (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    <Link className=\"breadcrumbs__item-link\" to={item[1]}>\n                        {item[0]}\n                    </Link>\n                </li>\n            )\n        )}\n    </ul>\n);\n\nBreadcrumbs.defaultName = 'Breadcrumbs';\nBreadcrumbs.propTypes = {\n    crumbs: PropTypes.array.isRequired\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n"],"sourceRoot":""}