{"version":3,"sources":["components/AmountControl/AmountControl.js","components/AmountControl/index.js","redux/filters/actions.js","components/Select/Select.js","components/Select/index.js","redux/filters/selectors.js","../node_modules/react-onclickoutside/dist/react-onclickoutside.es.js","components/Dropdown/Dropdown.js","components/Dropdown/index.js","components/FiltersForm/FiltersForm.js","components/FiltersForm/index.js","components/ProductListItem/ProductListItem.js","components/ProductListItem/index.js","components/ProductList/ProductList.js","components/ProductList/index.js","containers/Catalog/Catalog.js","containers/Catalog/index.js","components/Breadcrumbs/Breadcrumbs.js","components/Breadcrumbs/index.js"],"names":["AmountControl","amount","small","onAddToCart","onRemoveFromCart","list","className","onClick","defaultName","defaultProps","setFilters","filterData","type","types","clearFilters","Select","children","value","onChange","name","merge","hasError","filtersSelector","store","filters","isNodeFound","current","componentNode","ignoreClass","correspondingElement","classList","contains","testPassiveEventSupport","window","addEventListener","passive","options","Object","defineProperty","get","noop","removeEventListener","seed","passiveEventSupport","uid","handlersMap","enabledInstances","touchEvents","IGNORE_CLASS_NAME","getEventHandlerOptions","instance","eventName","handlerOptions","indexOf","props","preventDefault","WrappedComponent","config","_class","_temp","componentName","displayName","_Component","subClass","superClass","onClickOutside","_this","call","this","__outsideClickHandler","event","__clickOutsideHandlerProp","getInstance","handleClickOutside","Error","__getComponentNode","setClickOutsideRef","enableOnClickOutside","document","_uid","events","eventTypes","forEach","evt","stopPropagation","excludeScrollbar","documentElement","clientWidth","clientX","clientHeight","clientY","parentNode","findHighest","target","outsideClickIgnoreClass","disableOnClickOutside","fn","getRef","ref","instanceRef","prototype","create","constructor","__proto__","_proto","isReactComponent","componentDidMount","createElement","componentDidUpdate","componentWillUnmount","render","_props","source","excluded","key","i","sourceKeys","keys","length","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_objectWithoutProperties","wrappedRef","getClass","Dropdown","state","isOpen","handleToggle","setState","title","selectedItems","map","item","index","React","Component","onSettingsChange","FiltersForm","filtersState","productsAmount","categories","brands","tremolos","pickups","priceRange","onFiltersChange","isChecked","fieldName","undefined","find","onSubmit","placeholder","query","wordPluraliser","priceFrom","parseInt","currencyFormat","priceTo","brand","id","checked","pickup","tremolo","category","filterState","condForArrayFilters","filter","Array","isArray","condForFilters","filtersAreDirty","ProductListItem","thumb","price","cartItemAmount","to","route","product","link","src","image","alt","ProductList","products","NoData","message","Catalog","arrayRange","setFilteredProducts","filteredProducts","filterName","toLowerCase","includes","getLastItem","handleFiltersChange","addItemToCart","removeItemFromCart","Breadcrumbs","crumbs","connect","productsSelector","categoriesSelector","brandsSelector","pickupsSelector","tremolosSelector","cartItemAmountSelector","dispatch","home"],"mappings":"8IAIMA,G,OAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,iBAAkBC,EAAjD,EAAiDA,KAAjD,OAClB,yBACIC,UAAS,yBAAoBJ,EAAQ,wBAA0B,GAAtD,YACLG,EAAO,uBAAyB,KAGnCJ,EACG,oCACI,4BAAQM,QAASH,EAAkBE,UAAU,yBAA7C,KAGA,0BAAMA,UAAU,0BAA0BL,GAC1C,4BAAQM,QAASJ,EAAaG,UAAU,wBAAxC,MAKJ,4BAAQC,QAASJ,EAAaG,UAAU,uBAAxC,kBAOZN,EAAcQ,YAAc,gBAQ5BR,EAAcS,aAAe,CACzBR,OAAQ,EACRC,OAAO,EACPG,MAAM,GAGKL,QCxCAA,O,iCCFf,gFAEaU,EAAa,SAAAC,GAAU,MAAK,CACrCC,KAAMC,IACNF,WAAYA,IAGHG,EAAe,iBAAO,CAAEF,KAAMC,O,2ECHrCE,G,OAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,MAAOC,EAA3C,EAA2CA,SAA3C,OACX,2BAAOf,UAAS,iBAAYc,EAAQ,gBAAkB,GAAtC,YAA4CC,EAAW,gBAAkB,KACrF,4BAAQF,KAAMA,EAAMF,MAAOA,EAAOC,SAAUA,GACvCF,MAKbD,EAAOP,YAAc,SASrBO,EAAON,aAAe,CAClBU,KAAM,SACNC,OAAO,EACPC,UAAU,GAGCN,QCzBAA,O,oOCFTO,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,S,iCCuCvC,SAASC,EAAYC,EAASC,EAAeC,GAC3C,OAAIF,IAAYC,IAUZD,EAAQG,qBACHH,EAAQG,qBAAqBC,UAAUC,SAASH,GAGlDF,EAAQI,UAAUC,SAASH,IAuCpC,IAAII,EAA0B,WAC5B,GAAsB,qBAAXC,QAA6D,oBAA5BA,OAAOC,iBAAnD,CAIA,IAAIC,GAAU,EACVC,EAAUC,OAAOC,eAAe,GAAI,UAAW,CACjDC,IAAK,WACHJ,GAAU,KAIVK,EAAO,aAIX,OAFAP,OAAOC,iBAAiB,0BAA2BM,EAAMJ,GACzDH,OAAOQ,oBAAoB,0BAA2BD,EAAMJ,GACrDD,IAaT,IAViBO,EAWbC,EADAC,QATW,IAATF,IACFA,EAAO,GAGF,WACL,QAASA,IAMTG,EAAc,GACdC,EAAmB,GACnBC,EAAc,CAAC,aAAc,aAC7BC,EAAoB,8BAKxB,SAASC,EAAuBC,EAAUC,GACxC,IAAIC,EAAiB,KASrB,OARuD,IAApCL,EAAYM,QAAQF,IAEnBR,IAClBS,EAAiB,CACfjB,SAAUe,EAASI,MAAMC,iBAItBH,EAgOM,MArNf,SAA2BI,EAAkBC,GAC3C,IAAIC,EAAQC,EAERC,EAAgBJ,EAAiBK,aAAeL,EAAiBrC,MAAQ,YAC7E,OAAOwC,EAAQD,EAEf,SAAUI,GA5JZ,IAAwBC,EAAUC,EA+J9B,SAASC,EAAeX,GACtB,IAAIY,EAyGJ,OAvGAA,EAAQJ,EAAWK,KAAKC,KAAMd,IAAUc,MAElCC,sBAAwB,SAAUC,GACtC,GAA+C,oBAApCJ,EAAMK,0BAAjB,CAMA,IAAIrB,EAAWgB,EAAMM,cAErB,GAAiD,oBAAtCtB,EAASI,MAAMmB,mBAA1B,CAKA,GAA2C,oBAAhCvB,EAASuB,mBAKpB,MAAM,IAAIC,MAAM,qBAAuBd,EAAgB,oFAJrDV,EAASuB,mBAAmBH,QAL5BpB,EAASI,MAAMmB,mBAAmBH,QARlCJ,EAAMK,0BAA0BD,IAoBpCJ,EAAMS,mBAAqB,WACzB,IAAIzB,EAAWgB,EAAMM,cAErB,OAAIf,GAA+C,oBAA9BA,EAAOmB,mBACnBnB,EAAOmB,oBAAPnB,CAA4BP,GAGM,oBAAhCA,EAAS0B,mBACX1B,EAAS0B,qBAGX,sBAAY1B,IAGrBgB,EAAMW,qBAAuB,WAC3B,GAAwB,qBAAbC,WAA4BhC,EAAiBoB,EAAMa,MAA9D,CAImC,qBAAxBpC,IACTA,EAAsBX,KAGxBc,EAAiBoB,EAAMa,OAAQ,EAC/B,IAAIC,EAASd,EAAMZ,MAAM2B,WAEpBD,EAAOE,UACVF,EAAS,CAACA,IAGZnC,EAAYqB,EAAMa,MAAQ,SAAUT,GApI5C,IAA0Ba,EAqIY,OAAxBjB,EAAMvC,gBAENuC,EAAMZ,MAAMC,gBACde,EAAMf,iBAGJW,EAAMZ,MAAM8B,iBACdd,EAAMc,kBAGJlB,EAAMZ,MAAM+B,mBA/IAF,EA+IqCb,EA9ItDQ,SAASQ,gBAAgBC,aAAeJ,EAAIK,SAAWV,SAASQ,gBAAgBG,cAAgBN,EAAIO,UA1B7G,SAAqBhE,EAASC,EAAeC,GAC3C,GAAIF,IAAYC,EACd,OAAO,EAQT,KAAOD,EAAQiE,YAAY,CACzB,GAAIlE,EAAYC,EAASC,EAAeC,GACtC,OAAO,EAGTF,EAAUA,EAAQiE,WAGpB,OAAOjE,EAyJKkE,CAFUtB,EAAMuB,OAEK3B,EAAMvC,cAAeuC,EAAMZ,MAAMwC,2BAA6BhB,UAIvFZ,EAAMG,sBAAsBC,KAG9BU,EAAOE,SAAQ,SAAU/B,GACvB2B,SAAS5C,iBAAiBiB,EAAWN,EAAYqB,EAAMa,MAAO9B,EAAuBiB,EAAOf,SAIhGe,EAAM6B,sBAAwB,kBACrBjD,EAAiBoB,EAAMa,MAC9B,IAAIiB,EAAKnD,EAAYqB,EAAMa,MAE3B,GAAIiB,GAA0B,qBAAblB,SAA0B,CACzC,IAAIE,EAASd,EAAMZ,MAAM2B,WAEpBD,EAAOE,UACVF,EAAS,CAACA,IAGZA,EAAOE,SAAQ,SAAU/B,GACvB,OAAO2B,SAASrC,oBAAoBU,EAAW6C,EAAI/C,EAAuBiB,EAAOf,cAE5EN,EAAYqB,EAAMa,QAI7Bb,EAAM+B,OAAS,SAAUC,GACvB,OAAOhC,EAAMiC,YAAcD,GAG7BhC,EAAMa,KAAOnC,IACNsB,EAzQqBF,EA6JCF,GA7JXC,EA6JLE,GA5JRmC,UAAY/D,OAAOgE,OAAOrC,EAAWoC,WAC9CrC,EAASqC,UAAUE,YAAcvC,EACjCA,EAASwC,UAAYvC,EA6QnB,IAAIwC,EAASvC,EAAemC,UA8E5B,OA5EAI,EAAOhC,YAAc,WACnB,IAAKhB,EAAiB4C,UAAUK,iBAC9B,OAAOrC,KAGT,IAAI8B,EAAM9B,KAAK+B,YACf,OAAOD,EAAI1B,YAAc0B,EAAI1B,cAAgB0B,GAQ/CM,EAAOE,kBAAoB,WAIzB,GAAwB,qBAAb5B,UAA6BA,SAAS6B,cAAjD,CAIA,IAAIzD,EAAWkB,KAAKI,cAEpB,GAAIf,GAA+C,oBAA9BA,EAAOgB,qBAC1BL,KAAKG,0BAA4Bd,EAAOgB,mBAAmBvB,GAEb,oBAAnCkB,KAAKG,2BACd,MAAM,IAAIG,MAAM,qBAAuBd,EAAgB,4GAI3DQ,KAAKzC,cAAgByC,KAAKO,qBAEtBP,KAAKd,MAAMyC,uBACf3B,KAAKS,yBAGP2B,EAAOI,mBAAqB,WAC1BxC,KAAKzC,cAAgByC,KAAKO,sBAO5B6B,EAAOK,qBAAuB,WAC5BzC,KAAK2B,yBAYPS,EAAOM,OAAS,WAEd,IAAIC,EAAS3C,KAAKd,MAEdA,GADmByD,EAAO1B,iBA1UpC,SAAkC2B,EAAQC,GACxC,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLtB,EAAS,GACTuB,EAAa/E,OAAOgF,KAAKL,GAG7B,IAAKG,EAAI,EAAGA,EAAIC,EAAWE,OAAQH,IACjCD,EAAME,EAAWD,GACbF,EAAS5D,QAAQ6D,IAAQ,IAC7BrB,EAAOqB,GAAOF,EAAOE,IAGvB,GAAI7E,OAAOkF,sBAAuB,CAChC,IAAIC,EAAmBnF,OAAOkF,sBAAsBP,GAEpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBF,OAAQH,IACvCD,EAAMM,EAAiBL,GACnBF,EAAS5D,QAAQ6D,IAAQ,GACxB7E,OAAO+D,UAAUqB,qBAAqBtD,KAAK6C,EAAQE,KACxDrB,EAAOqB,GAAOF,EAAOE,IAIzB,OAAOrB,EAoTS6B,CAAyBX,EAAQ,CAAC,sBAU9C,OARIvD,EAAiB4C,UAAUK,iBAC7BnD,EAAM4C,IAAM9B,KAAK6B,OAEjB3C,EAAMqE,WAAavD,KAAK6B,OAG1B3C,EAAMyC,sBAAwB3B,KAAK2B,sBACnCzC,EAAMuB,qBAAuBT,KAAKS,qBAC3B,wBAAcrB,EAAkBF,IAGlCW,EAlMT,CAmME,aAAYP,EAAOG,YAAc,kBAAoBD,EAAgB,IAAKF,EAAOjD,aAAe,CAChGwE,WAAY,CAAC,YAAa,cAC1BI,iBAAkB5B,GAAUA,EAAO4B,mBAAoB,EACvDS,wBAAyB9C,EACzBO,gBAAgB,EAChB6B,iBAAiB,GAChB1B,EAAOkE,SAAW,WACnB,OAAOpE,EAAiBoE,SAAWpE,EAAiBoE,WAAapE,GAChEG,GCjWCkE,G,kNACFC,MAAQ,CAAEC,QAAQ,G,EAElBC,aAAe,kBAAM,EAAKC,SAAS,CAAEF,QAAS,EAAKD,MAAMC,U,EACzDtD,mBAAqB,kBAAM,EAAKwD,SAAS,CAAEF,QAAQ,K,wEAEzC,IAAD,EACsC3D,KAAKd,MAAxCtC,EADH,EACGA,SAAUkH,EADb,EACaA,MAAOC,EADpB,EACoBA,cAEzB,OACI,yBAAK7H,UAAS,mBAAc8D,KAAK0D,MAAMC,OAAS,iBAAmB,KAC/D,yBAAKzH,UAAU,mBACX,yBACIA,UAAS,0BACL6H,EAAgB,4BAA8B,IAElD5H,QAAS6D,KAAK4D,cAEbE,EANL,MAMeC,GAAF,WAAuBA,EAAvB,MAEb,wBAAI7H,UAAU,kBACTU,EAASoH,KAAI,SAACC,EAAMC,GAAP,OACV,wBAAIhI,UAAU,iBAAiB4G,IAAKoB,GAC/BD,a,GAvBVE,IAAMC,YAuC7BX,EAASrH,YAAc,WAKvBqH,EAASpH,aAAe,CACpBgI,iBAAkB,KAClBpH,UAAU,GAGC4C,ICxDA4D,EDwDA5D,EAAe4D,EAhBH,CACvBpD,mBAAoB,SAAAvB,GAChB,OAAOA,EAASuB,sB,iBErClBiE,G,OAAc,SAAC,GASd,IARHC,EAQE,EARFA,aACAC,EAOE,EAPFA,eACAC,EAME,EANFA,WACAC,EAKE,EALFA,OACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,WACAC,EACE,EADFA,gBAEMC,EAAY,SAACC,EAAWnI,GAAZ,YAC2CoI,IAAzDV,EAAaS,GAAWE,MAAK,SAAAjB,GAAI,OAAIA,IAASpH,MAkBlD,OACI,0BAAMX,UAAU,UAAUiJ,SAAU,SAAAjF,GAAK,OAAIA,EAAMf,mBAC/C,yBAAKjD,UAAU,sBACX,2BACIa,KAAK,QACLP,KAAK,OACL4I,YAAY,SACZlJ,UAAU,qBACVW,MAAO0H,EAAac,MACpBvI,SAAU,SAAAoD,GAAK,OACX4E,EAAgB,CAAEjI,MAAOqD,EAAMuB,OAAO5E,MAAO4E,OAAQ,aAG7D,0BAAMvF,UAAU,mBACXsI,EADL,IACsBc,YAAe,SAAUd,KAGnD,yBAAKtI,UAAU,gBACX,kBAACS,EAAA,EAAD,CACIK,OAAK,EACLH,MAAO0H,EAAagB,UACpBzI,SAAU,SAAAoD,GAAK,OACX4E,EAAgB,CACZjI,MAAO2I,SAAStF,EAAMuB,OAAO5E,MAAO,IACpC4E,OAAQ,gBAIfoD,EAAWb,KACR,SAACC,EAAMC,GAAP,OACIA,EAAQW,EAAW3B,OAAS,GACxB,4BAAQJ,IAAKmB,EAAMpH,MAAOoH,GACrBwB,YAAexB,QAMpC,kBAACtH,EAAA,EAAD,CACIK,OAAK,EACLD,KAAK,UACLF,MAAO0H,EAAamB,QACpB5I,SAAU,SAAAoD,GAAK,OACX4E,EAAgB,CACZjI,MAAO2I,SAAStF,EAAMuB,OAAO5E,MAAO,IACpC4E,OAAQ,cAIfoD,EAAWb,KACR,SAACC,EAAMC,GAAP,OACIA,GACI,4BAAQpB,IAAKmB,EAAMpH,MAAOoH,GACrBwB,YAAexB,QAMpC,kBAAC,EAAD,CAAUH,MAAM,QAAQC,cAAeQ,EAAaoB,MAAMzC,QACrDwB,EAAOV,KAAI,SAAA2B,GAAK,OACb,2BAAO7C,IAAG,UAAK6C,EAAMC,GAAX,YAAiBD,EAAM5I,OAC7B,2BACIA,KAAK,QACLP,KAAK,WACLK,MAAO8I,EAAMC,GACbC,QAASd,EAAU,QAASY,EAAMC,IAClC9I,SAAU,SAAAoD,GAAK,OACX4E,EAAgB,CACZjI,MAAOqD,EAAMuB,OAAOoE,QACpBpE,OAAQ,CAAC,QAASkE,EAAMC,SAInCD,EAAM5I,UAKnB,kBAAC,EAAD,CAAU+G,MAAM,UAAUC,cAAeQ,EAAauB,OAAO5C,QACxD0B,EAAQZ,KAAI,SAAA8B,GAAM,OACf,2BAAOhD,IAAG,UAAKgD,EAAOF,GAAZ,YAAkBE,EAAO/I,OAC/B,2BACIA,KAAK,SACLP,KAAK,WACLK,MAAOiJ,EAAOF,GACdC,QAASd,EAAU,SAAUe,EAAOF,IACpC9I,SAAU,SAAAoD,GAAK,OACX4E,EAAgB,CACZjI,MAAOqD,EAAMuB,OAAOoE,QACpBpE,OAAQ,CAAC,SAAUqE,EAAOF,SAIrCE,EAAO/I,UAKpB,kBAAC,EAAD,CAAU+G,MAAM,UAAUC,cAAeQ,EAAawB,QAAQ7C,QACzDyB,EAASX,KAAI,SAAA+B,GAAO,OACjB,2BAAOjD,IAAG,UAAKiD,EAAQH,GAAb,YAAmBG,EAAQhJ,OACjC,2BACIA,KAAK,UACLP,KAAK,WACLK,MAAOkJ,EAAQH,GACfC,QAASd,EAAU,UAAWgB,EAAQH,IACtC9I,SAAU,SAAAoD,GAAK,OACX4E,EAAgB,CACZjI,MAAOqD,EAAMuB,OAAOoE,QACpBpE,OAAQ,CAAC,UAAWsE,EAAQH,SAIvCG,EAAQhJ,UAKrB,kBAAC,EAAD,CAAU+G,MAAM,WAAWC,cAAeQ,EAAayB,SAAS9C,QAC3DuB,EAAWT,KAAI,SAAAgC,GAAQ,OACpB,2BAAOlD,IAAG,UAAKkD,EAASJ,GAAd,YAAoBI,EAASjJ,OACnC,2BACIA,KAAK,WACLP,KAAK,WACLK,MAAOmJ,EAASJ,GAChBC,QAASd,EAAU,WAAYiB,EAASJ,IACxC9I,SAAU,SAAAoD,GAAK,OACX4E,EAAgB,CACZjI,MAAOqD,EAAMuB,OAAOoE,QACpBpE,OAAQ,CAAC,WAAYuE,EAASJ,SAIzCI,EAASjJ,UAKtB,yBAAKb,UAAU,kBA3JH,WACpB,IAAI+J,GAAc,EACZC,EAAsB,SAAAC,GAAM,OAC9BC,MAAMC,QAAQ9B,EAAa4B,OAAc5B,EAAa4B,GAAQjD,QAC5DoD,EAAiB,SAAAH,GAAM,OACxBC,MAAMC,QAAQ9B,EAAa4B,OAC1B5B,EAAa4B,MACF,YAAXA,GAAiD,OAAzB5B,EAAa4B,KAE3C,IAAK,IAAIA,KAAU5B,GACX2B,EAAoBC,IAAWG,EAAeH,MAASF,GAAc,GAG7E,OAAOA,EA+IMM,IACG,4BACIrK,UAAU,eACVC,QAAS,kBACL2I,EAAgB,CACZjI,MAAO,KACP4E,OAAQ,kBAW5C6C,EAAYlI,YAAc,cAmB1BkI,EAAYjI,aAAe,CACvBkI,aAAc,CACVoB,MAAO,GACPK,SAAU,GACVF,OAAQ,GACRP,UAAW,EACXG,QAAS,EACTL,MAAO,GACPU,QAAS,IAEbvB,eAAgB,EAChBC,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTC,WAAY,IAGDP,ICpOAA,EDoOAA,E,uBE9NTkC,G,OAAkB,SAAC,GAAD,IACpBZ,EADoB,EACpBA,GACA7I,EAFoB,EAEpBA,KACA0J,EAHoB,EAGpBA,MACAC,EAJoB,EAIpBA,MACAf,EALoB,EAKpBA,MACAK,EANoB,EAMpBA,SACAW,EAPoB,EAOpBA,eACA3K,EARoB,EAQpBA,iBACAD,EAToB,EASpBA,YAToB,OAWpB,yBAAKG,UAAU,qBACX,kBAAC,IAAD,CAAMA,UAAU,6BAA6B0K,GAAIC,IAAMC,QAAQC,KAAKnB,IAChE,yBAAK1J,UAAU,2BAA2B8K,IAAKrB,EAAMsB,MAAOC,IAAKvB,EAAM5I,OACvE,yBAAKb,UAAU,2BAA2B8K,IAAKP,EAAOS,IAAKnK,IAC3D,wBAAIb,UAAU,4BAA4Ba,GAC1C,wBAAIb,UAAU,+BAA+B8J,EAASjJ,OAG1D,yBAAKb,UAAU,6BACX,uBAAGA,UAAU,4BAA4BuJ,YAAeiB,IACxD,kBAAC9K,EAAA,EAAD,CACIK,MAAI,EACJJ,OAAQ8K,EACR5K,YAAaA,EACbC,iBAAkBA,QAMlCwK,EAAgBpK,YAAc,kBAkB9BoK,EAAgBnK,aAAe,CAC3BsK,eAAgB,GAGLH,IC3DAA,ED2DAA,E,QEvDTW,G,OAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUT,EAAb,EAAaA,eAAgB5K,EAA7B,EAA6BA,YAAaC,EAA1C,EAA0CA,iBAA1C,OAChBoL,EAASlE,OACL,yBAAKhH,UAAU,gBACVkL,EAASpD,KAAI,SAAA8C,GAAO,OACjB,kBAAC,EAAD,iBACQA,EADR,CAEIhE,IAAKgE,EAAQlB,GACbe,eAAgBA,EAAeG,EAAQlB,IACvC7J,YAAa,kBACTA,EAAY,CACR6J,GAAIkB,EAAQlB,GACZ7I,KAAM+J,EAAQ/J,KACd0J,MAAOK,EAAQL,MACfC,MAAOI,EAAQJ,MACfV,SAAUc,EAAQd,SAASjJ,QAGnCf,iBAAkB,kBAAMA,EAAiB8K,EAAQlB,YAK7D,kBAACyB,EAAA,EAAD,CAAQC,QAAQ,wBAGxBH,EAAY/K,YAAc,cAO1B+K,EAAY9K,aAAe,CACvB+K,SAAU,IAGCD,ICxCAA,EDwCAA,E,kOEvBTI,E,2MACF1C,WAAa2C,YAAW,GAAI,K,EAE5BC,oBAAsB,SAACrK,EAASgK,GAC5B,IAAIM,EAAmBN,EADkB,WAG9BO,GACP,OAAQA,GACJ,IAAK,QACD,IAAMtC,EAAQjI,EAAQuK,GAAYC,cAElCF,EAAmBA,EAAiBvB,QAAO,SAAAW,GAAO,OAC9CA,EAAQ/J,KAAK6K,cAAcC,SAASxC,MAExC,MAEJ,IAAK,YACD,IAAME,EAAYnI,EAAQuK,GAAcnC,SAASpI,EAAQuK,GAAa,IAAM,EAE5ED,EAAmBA,EAAiBvB,QAChC,SAAAW,GAAO,OAAItB,SAASsB,EAAQJ,MAAO,KAAOnB,KAE9C,MAEJ,IAAK,UACD,IAAMG,EAAUtI,EAAQuK,GAClBnC,SAASpI,EAAQuK,GAAa,IAC9BG,YAAY,EAAKjD,YAEvB6C,EAAmBA,EAAiBvB,QAChC,SAAAW,GAAO,OAAItB,SAASsB,EAAQJ,MAAO,KAAOhB,KAE9C,MAEJ,QACI,IAAMnJ,EAAaa,EAAQuK,GAErBvB,MAAMC,QAAQ9J,IAAeA,EAAW2G,SAC1CwE,EAAmBA,EAAiBvB,QAAO,SAAAW,GAAO,OAC9CvK,EAAWsL,SAASf,EAAQa,GAAY/B,UAjC5D,IAAK,IAAM+B,KAAcvK,EAAU,EAAxBuK,GAuCX,OAAOD,G,EAGXK,oBAAsB,SAAAxL,GAAe,IAAD,EACK,EAAK2C,MAAlC5C,EADwB,EACxBA,WAAYI,EADY,EACZA,aAEM,UAAtBH,EAAWkF,OACXnF,EAAWC,GAEXG,K,wEAIE,IAAD,EAWDsD,KAAKd,MATLuF,EAFC,EAEDA,WACAC,EAHC,EAGDA,OACAE,EAJC,EAIDA,QACAD,EALC,EAKDA,SACAqD,EANC,EAMDA,cACAC,EAPC,EAODA,mBACAtB,EARC,EAQDA,eACAvJ,EATC,EASDA,QACAgK,EAVC,EAUDA,SAEEM,EAAmB1H,KAAKyH,oBAAoBrK,EAASgK,GACrD7C,E,yVAAY,IACXnH,EADW,CAEdsI,QAAStI,EAAQsI,QAAUtI,EAAQsI,QAAUoC,YAAY9H,KAAK6E,cAGlE,OACI,oCACI,kBAACqD,EAAA,EAAD,CAAaC,OAAQ,CAAC,CAAC,cACvB,wBAAIjM,UAAU,iBAAd,WAEA,kBAAC,EAAD,CACIqI,aAAcA,EACdM,WAAY7E,KAAK6E,WACjBL,eAAgBkD,EAAiBxE,OACjCkE,SAAUM,EACVjD,WAAYA,EACZC,OAAQA,EACRE,QAASA,EACTD,SAAUA,EACVG,gBAAiB9E,KAAK+H,sBAG1B,kBAAC,EAAD,CACIX,SAAUM,EACVf,eAAgBA,EAChB5K,YAAaiM,EACbhM,iBAAkBiM,S,GAjGhB9D,IAAMC,WAwG5BmD,EAAQnL,YAAc,UAsBtBmL,EAAQlL,aAAe,CACnB+K,SAAU,GACV3C,WAAY,GACZC,OAAQ,GACRE,QAAS,GACTD,SAAU,IAGd,IAiBeyD,eAVS,SAAAjL,GAAK,MAAK,CAC9BC,QAASF,EAAgBC,GACzBiK,SAAUiB,YAAiBlL,GAC3BsH,WAAY6D,YAAmBnL,GAC/BuH,OAAQ6D,YAAepL,GACvByH,QAAS4D,YAAgBrL,GACzBwH,SAAU8D,YAAiBtL,GAC3BwJ,eAAgB,SAAAf,GAAE,OAAI8C,YAAuB9C,EAAIzI,QAd1B,SAAAwL,GAAQ,MAAK,CACpCjM,aAAc,kBAAMiM,EAASjM,gBAC7BJ,WAAY,SAAAC,GAAU,OAAIoM,EAASrM,YAAWC,KAC9CyL,cAAe,SAAAlB,GAAO,OAAI6B,EAASX,YAAclB,KACjDmB,mBAAoB,SAAAnB,GAAO,OAAI6B,EAASV,YAAmBnB,QAahDsB,CAGbb,GC3KaA,a,uFCITW,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAChB,wBAAIjM,UAAU,eACV,wBAAIA,UAAU,6CACV,kBAAC,IAAD,CAAMA,UAAU,yBAAyB0K,GAAIC,IAAM+B,KAAK7B,MAAxD,SAIHoB,EAAOnE,KAAI,SAACC,EAAMC,GAAP,OACRiE,EAAOjF,OAAS,IAAMgB,EAClB,wBAAIhI,UAAU,oBAAoB4G,IAAKmB,EAAK,IACvCA,EAAK,IAGV,wBAAI/H,UAAU,oBAAoB4G,IAAKmB,EAAK,IACxC,kBAAC,IAAD,CAAM/H,UAAU,yBAAyB0K,GAAI3C,EAAK,IAC7CA,EAAK,WAQ9BiE,EAAY9L,YAAc,cAKX8L,QChCAA","file":"static/js/4.cf30c3b9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.sass';\n\nconst AmountControl = ({ amount, small, onAddToCart, onRemoveFromCart, list }) => (\n    <div\n        className={`amount-control ${small ? 'amount-control--small' : ''} ${\n            list ? 'amount-control--list' : ''\n        }`}\n    >\n        {amount ? (\n            <>\n                <button onClick={onRemoveFromCart} className=\"amount-control__minus\">\n                    -\n                </button>\n                <span className=\"amount-control__number\">{amount}</span>\n                <button onClick={onAddToCart} className=\"amount-control__plus\">\n                    +\n                </button>\n            </>\n        ) : (\n            <button onClick={onAddToCart} className=\"amount-control__add\">\n                Add to cart\n            </button>\n        )}\n    </div>\n);\n\nAmountControl.defaultName = 'AmountControl';\nAmountControl.propTypes = {\n    onAddToCart: PropTypes.func.isRequired,\n    onRemoveFromCart: PropTypes.func.isRequired,\n    amount: PropTypes.number,\n    small: PropTypes.bool,\n    list: PropTypes.bool\n};\nAmountControl.defaultProps = {\n    amount: 0,\n    small: false,\n    list: false\n};\n\nexport default AmountControl;\n","import AmountControl from './AmountControl';\n\nexport default AmountControl;\n","import * as types from './types';\n\nexport const setFilters = filterData => ({\n    type: types.SET_FILTERS,\n    filterData: filterData\n});\n\nexport const clearFilters = () => ({ type: types.CLEAR_FILTERS });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.sass';\n\nconst Select = ({ children, value, onChange, name, merge, hasError }) => (\n    <label className={`select ${merge ? 'select--merge' : ''} ${hasError ? 'select--error' : ''}`}>\n        <select name={name} value={value} onChange={onChange}>\n            {children}\n        </select>\n    </label>\n);\n\nSelect.defaultName = 'Select';\nSelect.propTypes = {\n    children: PropTypes.array.isRequired,\n    value: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    merge: PropTypes.bool,\n    hasError: PropTypes.bool\n};\nSelect.defaultProps = {\n    name: 'Select',\n    merge: false,\n    hasError: false\n};\n\nexport default Select;\n","import Select from './Select';\n\nexport default Select;\n","const filtersSelector = store => store.filters;\n\nexport { filtersSelector };\n","import { Component, createElement } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * Check whether some DOM node is our Component's node.\n */\n\n\nfunction isNodeFound(current, componentNode, ignoreClass) {\n  if (current === componentNode) {\n    return true;\n  } // SVG <use/> elements do not technically reside in the rendered DOM, so\n  // they do not have classList directly, but they offer a link to their\n  // corresponding element, which can have classList. This extra check is for\n  // that case.\n  // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement\n  // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17\n\n\n  if (current.correspondingElement) {\n    return current.correspondingElement.classList.contains(ignoreClass);\n  }\n\n  return current.classList.contains(ignoreClass);\n}\n/**\n * Try to find our node in a hierarchy of nodes, returning the document\n * node as highest node if our node is not found in the path up.\n */\n\n\nfunction findHighest(current, componentNode, ignoreClass) {\n  if (current === componentNode) {\n    return true;\n  } // If source=local then this event came from 'somewhere'\n  // inside and should be ignored. We could handle this with\n  // a layered approach, too, but that requires going back to\n  // thinking in terms of Dom node nesting, running counter\n  // to React's 'you shouldn't care about the DOM' philosophy.\n\n\n  while (current.parentNode) {\n    if (isNodeFound(current, componentNode, ignoreClass)) {\n      return true;\n    }\n\n    current = current.parentNode;\n  }\n\n  return current;\n}\n/**\n * Check if the browser scrollbar was clicked\n */\n\n\nfunction clickedScrollbar(evt) {\n  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;\n} // ideally will get replaced with external dep\n// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in\n\n\nvar testPassiveEventSupport = function testPassiveEventSupport() {\n  if (typeof window === 'undefined' || typeof window.addEventListener !== 'function') {\n    return;\n  }\n\n  var passive = false;\n  var options = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passive = true;\n    }\n  });\n\n  var noop = function noop() {};\n\n  window.addEventListener('testPassiveEventSupport', noop, options);\n  window.removeEventListener('testPassiveEventSupport', noop, options);\n  return passive;\n};\n\nfunction autoInc(seed) {\n  if (seed === void 0) {\n    seed = 0;\n  }\n\n  return function () {\n    return ++seed;\n  };\n}\n\nvar uid = autoInc();\nvar passiveEventSupport;\nvar handlersMap = {};\nvar enabledInstances = {};\nvar touchEvents = ['touchstart', 'touchmove'];\nvar IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';\n/**\n * Options for addEventHandler and removeEventHandler\n */\n\nfunction getEventHandlerOptions(instance, eventName) {\n  var handlerOptions = null;\n  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;\n\n  if (isTouchEvent && passiveEventSupport) {\n    handlerOptions = {\n      passive: !instance.props.preventDefault\n    };\n  }\n\n  return handlerOptions;\n}\n/**\n * This function generates the HOC function that you'll use\n * in order to impart onOutsideClick listening to an\n * arbitrary component. It gets called at the end of the\n * bootstrapping code to yield an instance of the\n * onClickOutsideHOC function defined inside setupHOC().\n */\n\n\nfunction onClickOutsideHOC(WrappedComponent, config) {\n  var _class, _temp;\n\n  var componentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(onClickOutside, _Component);\n\n    function onClickOutside(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n\n      _this.__outsideClickHandler = function (event) {\n        if (typeof _this.__clickOutsideHandlerProp === 'function') {\n          _this.__clickOutsideHandlerProp(event);\n\n          return;\n        }\n\n        var instance = _this.getInstance();\n\n        if (typeof instance.props.handleClickOutside === 'function') {\n          instance.props.handleClickOutside(event);\n          return;\n        }\n\n        if (typeof instance.handleClickOutside === 'function') {\n          instance.handleClickOutside(event);\n          return;\n        }\n\n        throw new Error(\"WrappedComponent: \" + componentName + \" lacks a handleClickOutside(event) function for processing outside click events.\");\n      };\n\n      _this.__getComponentNode = function () {\n        var instance = _this.getInstance();\n\n        if (config && typeof config.setClickOutsideRef === 'function') {\n          return config.setClickOutsideRef()(instance);\n        }\n\n        if (typeof instance.setClickOutsideRef === 'function') {\n          return instance.setClickOutsideRef();\n        }\n\n        return findDOMNode(instance);\n      };\n\n      _this.enableOnClickOutside = function () {\n        if (typeof document === 'undefined' || enabledInstances[_this._uid]) {\n          return;\n        }\n\n        if (typeof passiveEventSupport === 'undefined') {\n          passiveEventSupport = testPassiveEventSupport();\n        }\n\n        enabledInstances[_this._uid] = true;\n        var events = _this.props.eventTypes;\n\n        if (!events.forEach) {\n          events = [events];\n        }\n\n        handlersMap[_this._uid] = function (event) {\n          if (_this.componentNode === null) return;\n\n          if (_this.props.preventDefault) {\n            event.preventDefault();\n          }\n\n          if (_this.props.stopPropagation) {\n            event.stopPropagation();\n          }\n\n          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;\n          var current = event.target;\n\n          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {\n            return;\n          }\n\n          _this.__outsideClickHandler(event);\n        };\n\n        events.forEach(function (eventName) {\n          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_this, eventName));\n        });\n      };\n\n      _this.disableOnClickOutside = function () {\n        delete enabledInstances[_this._uid];\n        var fn = handlersMap[_this._uid];\n\n        if (fn && typeof document !== 'undefined') {\n          var events = _this.props.eventTypes;\n\n          if (!events.forEach) {\n            events = [events];\n          }\n\n          events.forEach(function (eventName) {\n            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_this, eventName));\n          });\n          delete handlersMap[_this._uid];\n        }\n      };\n\n      _this.getRef = function (ref) {\n        return _this.instanceRef = ref;\n      };\n\n      _this._uid = uid();\n      return _this;\n    }\n    /**\n     * Access the WrappedComponent's instance.\n     */\n\n\n    var _proto = onClickOutside.prototype;\n\n    _proto.getInstance = function getInstance() {\n      if (!WrappedComponent.prototype.isReactComponent) {\n        return this;\n      }\n\n      var ref = this.instanceRef;\n      return ref.getInstance ? ref.getInstance() : ref;\n    };\n    /**\n     * Add click listeners to the current document,\n     * linked to this component's state.\n     */\n\n\n    _proto.componentDidMount = function componentDidMount() {\n      // If we are in an environment without a DOM such\n      // as shallow rendering or snapshots then we exit\n      // early to prevent any unhandled errors being thrown.\n      if (typeof document === 'undefined' || !document.createElement) {\n        return;\n      }\n\n      var instance = this.getInstance();\n\n      if (config && typeof config.handleClickOutside === 'function') {\n        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);\n\n        if (typeof this.__clickOutsideHandlerProp !== 'function') {\n          throw new Error(\"WrappedComponent: \" + componentName + \" lacks a function for processing outside click events specified by the handleClickOutside config option.\");\n        }\n      }\n\n      this.componentNode = this.__getComponentNode(); // return early so we dont initiate onClickOutside\n\n      if (this.props.disableOnClickOutside) return;\n      this.enableOnClickOutside();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      this.componentNode = this.__getComponentNode();\n    };\n    /**\n     * Remove all document's event listeners for this component\n     */\n\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.disableOnClickOutside();\n    };\n    /**\n     * Can be called to explicitly enable event listening\n     * for clicks and touches outside of this element.\n     */\n\n    /**\n     * Pass-through render\n     */\n\n\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _props = this.props,\n          excludeScrollbar = _props.excludeScrollbar,\n          props = _objectWithoutProperties(_props, [\"excludeScrollbar\"]);\n\n      if (WrappedComponent.prototype.isReactComponent) {\n        props.ref = this.getRef;\n      } else {\n        props.wrappedRef = this.getRef;\n      }\n\n      props.disableOnClickOutside = this.disableOnClickOutside;\n      props.enableOnClickOutside = this.enableOnClickOutside;\n      return createElement(WrappedComponent, props);\n    };\n\n    return onClickOutside;\n  }(Component), _class.displayName = \"OnClickOutside(\" + componentName + \")\", _class.defaultProps = {\n    eventTypes: ['mousedown', 'touchstart'],\n    excludeScrollbar: config && config.excludeScrollbar || false,\n    outsideClickIgnoreClass: IGNORE_CLASS_NAME,\n    preventDefault: false,\n    stopPropagation: false\n  }, _class.getClass = function () {\n    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;\n  }, _temp;\n}\n\nexport { IGNORE_CLASS_NAME };\nexport default onClickOutsideHOC;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport onClickOutside from 'react-onclickoutside';\nimport './styles.sass';\n\n/**\n * Define Dropdown component like a class component\n * for catch instase on clickOutsideConfig function\n */\nclass Dropdown extends React.Component {\n    state = { isOpen: false };\n\n    handleToggle = () => this.setState({ isOpen: !this.state.isOpen });\n    handleClickOutside = () => this.setState({ isOpen: false });\n\n    render() {\n        const { children, title, selectedItems } = this.props;\n\n        return (\n            <div className={`dropdown ${this.state.isOpen ? 'dropdown--open' : ''}`}>\n                <div className=\"dropdown__inner\">\n                    <div\n                        className={`dropdown__title ${\n                            selectedItems ? 'dropdown__title--selected' : ''\n                        }`}\n                        onClick={this.handleToggle}\n                    >\n                        {title} {!!selectedItems && `(${selectedItems})`}\n                    </div>\n                    <ul className=\"dropdown__list\">\n                        {children.map((item, index) => (\n                            <li className=\"dropdown__item\" key={index}>\n                                {item}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst clickOutsideConfig = {\n    handleClickOutside: instance => {\n        return instance.handleClickOutside;\n    }\n};\n\nDropdown.defaultName = 'Dropdown';\nDropdown.propTypes = {\n    onSettingsChange: PropTypes.func,\n    hasError: PropTypes.bool\n};\nDropdown.defaultProps = {\n    onSettingsChange: null,\n    hasError: false\n};\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);\n","import Dropdown from './Dropdown';\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../Dropdown';\nimport Select from '../Select';\nimport { wordPluraliser, currencyFormat } from '../../utils/helper';\nimport './styles.sass';\n\nconst FiltersForm = ({\n    filtersState,\n    productsAmount,\n    categories,\n    brands,\n    tremolos,\n    pickups,\n    priceRange,\n    onFiltersChange\n}) => {\n    const isChecked = (fieldName, value) =>\n        filtersState[fieldName].find(item => item === value) !== undefined;\n\n    const filtersAreDirty = () => {\n        let filterState = false;\n        const condForArrayFilters = filter =>\n            Array.isArray(filtersState[filter]) && !!filtersState[filter].length;\n        const condForFilters = filter =>\n            !Array.isArray(filtersState[filter]) &&\n            !!filtersState[filter] &&\n            !(filter === 'priceTo' && filtersState[filter] === 2700);\n\n        for (let filter in filtersState) {\n            if (condForArrayFilters(filter) || condForFilters(filter)) filterState = true;\n        }\n\n        return filterState;\n    };\n\n    return (\n        <form className=\"filters\" onSubmit={event => event.preventDefault()}>\n            <div className=\"filters__searchbar\">\n                <input\n                    name=\"query\"\n                    type=\"text\"\n                    placeholder=\"search\"\n                    className=\"input input--large\"\n                    value={filtersState.query}\n                    onChange={event =>\n                        onFiltersChange({ value: event.target.value, target: 'query' })\n                    }\n                />\n                <span className=\"filters__amount\">\n                    {productsAmount} {wordPluraliser('Guitar', productsAmount)}\n                </span>\n            </div>\n            <div className=\"filters__bar\">\n                <Select\n                    merge\n                    value={filtersState.priceFrom}\n                    onChange={event =>\n                        onFiltersChange({\n                            value: parseInt(event.target.value, 10),\n                            target: 'priceFrom'\n                        })\n                    }\n                >\n                    {priceRange.map(\n                        (item, index) =>\n                            index < priceRange.length - 1 && (\n                                <option key={item} value={item}>\n                                    {currencyFormat(item)}\n                                </option>\n                            )\n                    )}\n                </Select>\n\n                <Select\n                    merge\n                    name=\"priceTo\"\n                    value={filtersState.priceTo}\n                    onChange={event =>\n                        onFiltersChange({\n                            value: parseInt(event.target.value, 10),\n                            target: 'priceTo'\n                        })\n                    }\n                >\n                    {priceRange.map(\n                        (item, index) =>\n                            index && (\n                                <option key={item} value={item}>\n                                    {currencyFormat(item)}\n                                </option>\n                            )\n                    )}\n                </Select>\n\n                <Dropdown title=\"Brand\" selectedItems={filtersState.brand.length}>\n                    {brands.map(brand => (\n                        <label key={`${brand.id}-${brand.name}`}>\n                            <input\n                                name=\"brand\"\n                                type=\"checkbox\"\n                                value={brand.id}\n                                checked={isChecked('brand', brand.id)}\n                                onChange={event =>\n                                    onFiltersChange({\n                                        value: event.target.checked,\n                                        target: ['brand', brand.id]\n                                    })\n                                }\n                            />\n                            {brand.name}\n                        </label>\n                    ))}\n                </Dropdown>\n\n                <Dropdown title=\"Pickups\" selectedItems={filtersState.pickup.length}>\n                    {pickups.map(pickup => (\n                        <label key={`${pickup.id}-${pickup.name}`}>\n                            <input\n                                name=\"pickup\"\n                                type=\"checkbox\"\n                                value={pickup.id}\n                                checked={isChecked('pickup', pickup.id)}\n                                onChange={event =>\n                                    onFiltersChange({\n                                        value: event.target.checked,\n                                        target: ['pickup', pickup.id]\n                                    })\n                                }\n                            />\n                            {pickup.name}\n                        </label>\n                    ))}\n                </Dropdown>\n\n                <Dropdown title=\"Tremolo\" selectedItems={filtersState.tremolo.length}>\n                    {tremolos.map(tremolo => (\n                        <label key={`${tremolo.id}-${tremolo.name}`}>\n                            <input\n                                name=\"tremolo\"\n                                type=\"checkbox\"\n                                value={tremolo.id}\n                                checked={isChecked('tremolo', tremolo.id)}\n                                onChange={event =>\n                                    onFiltersChange({\n                                        value: event.target.checked,\n                                        target: ['tremolo', tremolo.id]\n                                    })\n                                }\n                            />\n                            {tremolo.name}\n                        </label>\n                    ))}\n                </Dropdown>\n\n                <Dropdown title=\"Category\" selectedItems={filtersState.category.length}>\n                    {categories.map(category => (\n                        <label key={`${category.id}-${category.name}`}>\n                            <input\n                                name=\"category\"\n                                type=\"checkbox\"\n                                value={category.id}\n                                checked={isChecked('category', category.id)}\n                                onChange={event =>\n                                    onFiltersChange({\n                                        value: event.target.checked,\n                                        target: ['category', category.id]\n                                    })\n                                }\n                            />\n                            {category.name}\n                        </label>\n                    ))}\n                </Dropdown>\n\n                <div className=\"filters__close\">\n                    {filtersAreDirty() && (\n                        <button\n                            className=\"close-button\"\n                            onClick={() =>\n                                onFiltersChange({\n                                    value: null,\n                                    target: 'clear'\n                                })\n                            }\n                        />\n                    )}\n                </div>\n            </div>\n        </form>\n    );\n};\n\nFiltersForm.defaultName = 'FiltersForm';\nFiltersForm.propTypes = {\n    onFiltersChange: PropTypes.func.isRequired,\n    filtersState: PropTypes.shape({\n        brand: PropTypes.array,\n        category: PropTypes.array,\n        pickup: PropTypes.array,\n        priceFrom: PropTypes.number,\n        priceTo: PropTypes.number,\n        query: PropTypes.string,\n        tremolo: PropTypes.array\n    }),\n    productsAmount: PropTypes.number,\n    categories: PropTypes.array,\n    brands: PropTypes.array,\n    tremolos: PropTypes.array,\n    pickups: PropTypes.array,\n    priceRange: PropTypes.array\n};\nFiltersForm.defaultProps = {\n    filtersState: {\n        brand: [],\n        category: [],\n        pickup: [],\n        priceFrom: 0,\n        priceTo: 0,\n        query: '',\n        tremolo: []\n    },\n    productsAmount: 0,\n    categories: [],\n    brands: [],\n    tremolos: [],\n    pickups: [],\n    priceRange: []\n};\n\nexport default FiltersForm;\n","import FiltersForm from './FiltersForm';\n\nexport default FiltersForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AmountControl from '../AmountControl';\nimport { route } from '../../utils/config';\nimport { currencyFormat } from '../../utils/helper';\nimport './styles.sass';\n\nconst ProductListItem = ({\n    id,\n    name,\n    thumb,\n    price,\n    brand,\n    category,\n    cartItemAmount,\n    onRemoveFromCart,\n    onAddToCart\n}) => (\n    <div className=\"product-list-item\">\n        <Link className=\"product-list-item__content\" to={route.product.link(id)}>\n            <img className=\"product-list-item__brand\" src={brand.image} alt={brand.name} />\n            <img className=\"product-list-item__image\" src={thumb} alt={name} />\n            <h4 className=\"product-list-item__title\">{name}</h4>\n            <h5 className=\"product-list-item__category\">{category.name}</h5>\n        </Link>\n\n        <div className=\"product-list-item__footer\">\n            <p className=\"product-list-item__price\">{currencyFormat(price)}</p>\n            <AmountControl\n                list\n                amount={cartItemAmount}\n                onAddToCart={onAddToCart}\n                onRemoveFromCart={onRemoveFromCart}\n            />\n        </div>\n    </div>\n);\n\nProductListItem.defaultName = 'ProductListItem';\nProductListItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    thumb: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    brand: PropTypes.shape({\n        name: PropTypes.string,\n        image: PropTypes.string\n    }).isRequired,\n    category: PropTypes.shape({\n        name: PropTypes.string,\n        image: PropTypes.string\n    }).isRequired,\n    onRemoveFromCart: PropTypes.func.isRequired,\n    onAddToCart: PropTypes.func.isRequired,\n    cartItemAmount: PropTypes.number\n};\nProductListItem.defaultProps = {\n    cartItemAmount: 0\n};\n\nexport default ProductListItem;\n","import ProductListItem from './ProductListItem';\n\nexport default ProductListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductListItem from '../ProductListItem';\nimport NoData from '../../components/NoData';\nimport './styles.sass';\n\nconst ProductList = ({ products, cartItemAmount, onAddToCart, onRemoveFromCart }) =>\n    products.length ? (\n        <div className=\"product-list\">\n            {products.map(product => (\n                <ProductListItem\n                    {...product}\n                    key={product.id}\n                    cartItemAmount={cartItemAmount(product.id)}\n                    onAddToCart={() =>\n                        onAddToCart({\n                            id: product.id,\n                            name: product.name,\n                            thumb: product.thumb,\n                            price: product.price,\n                            category: product.category.name\n                        })\n                    }\n                    onRemoveFromCart={() => onRemoveFromCart(product.id)}\n                />\n            ))}\n        </div>\n    ) : (\n        <NoData message=\"No product found!\" />\n    );\n\nProductList.defaultName = 'ProductList';\nProductList.propTypes = {\n    cartItemAmount: PropTypes.func.isRequired,\n    onAddToCart: PropTypes.func.isRequired,\n    onRemoveFromCart: PropTypes.func.isRequired,\n    products: PropTypes.array\n};\nProductList.defaultProps = {\n    products: []\n};\n\nexport default ProductList;\n","import ProductList from './ProductList';\n\nexport default ProductList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { productsSelector } from '../../redux/products/selectors';\nimport {\n    categoriesSelector,\n    brandsSelector,\n    pickupsSelector,\n    tremolosSelector\n} from '../../redux/settings/selectors';\nimport { cartItemAmountSelector } from '../../redux/cart/selectors';\nimport { filtersSelector } from '../../redux/filters/selectors';\nimport { addItemToCart, removeItemFromCart } from '../../redux/cart/actions';\nimport { setFilters, clearFilters } from '../../redux/filters/actions';\nimport Breadcrumbs from '../../components/Breadcrumbs';\nimport FiltersForm from '../../components/FiltersForm';\nimport ProductList from '../../components/ProductList';\nimport { arrayRange, getLastItem } from '../../utils/helper';\n\nclass Catalog extends React.Component {\n    priceRange = arrayRange(10, 300);\n\n    setFilteredProducts = (filters, products) => {\n        let filteredProducts = products;\n\n        for (const filterName in filters) {\n            switch (filterName) {\n                case 'query':\n                    const query = filters[filterName].toLowerCase();\n\n                    filteredProducts = filteredProducts.filter(product =>\n                        product.name.toLowerCase().includes(query)\n                    );\n                    break;\n\n                case 'priceFrom':\n                    const priceFrom = filters[filterName] ? parseInt(filters[filterName], 10) : 0;\n\n                    filteredProducts = filteredProducts.filter(\n                        product => parseInt(product.price, 10) >= priceFrom\n                    );\n                    break;\n\n                case 'priceTo':\n                    const priceTo = filters[filterName]\n                        ? parseInt(filters[filterName], 10)\n                        : getLastItem(this.priceRange);\n\n                    filteredProducts = filteredProducts.filter(\n                        product => parseInt(product.price, 10) <= priceTo\n                    );\n                    break;\n\n                default:\n                    const filterData = filters[filterName];\n\n                    if (!!Array.isArray(filterData) && filterData.length) {\n                        filteredProducts = filteredProducts.filter(product =>\n                            filterData.includes(product[filterName].id)\n                        );\n                    }\n            }\n        }\n\n        return filteredProducts;\n    };\n\n    handleFiltersChange = filterData => {\n        const { setFilters, clearFilters } = this.props;\n\n        if (filterData.target !== 'clear') {\n            setFilters(filterData);\n        } else {\n            clearFilters();\n        }\n    };\n\n    render() {\n        const {\n            categories,\n            brands,\n            pickups,\n            tremolos,\n            addItemToCart,\n            removeItemFromCart,\n            cartItemAmount,\n            filters,\n            products\n        } = this.props;\n        const filteredProducts = this.setFilteredProducts(filters, products);\n        const filtersState = {\n            ...filters,\n            priceTo: filters.priceTo ? filters.priceTo : getLastItem(this.priceRange)\n        };\n\n        return (\n            <>\n                <Breadcrumbs crumbs={[['Catalog']]} />\n                <h1 className=\"main-subtitle\">Catalog</h1>\n\n                <FiltersForm\n                    filtersState={filtersState}\n                    priceRange={this.priceRange}\n                    productsAmount={filteredProducts.length}\n                    products={filteredProducts}\n                    categories={categories}\n                    brands={brands}\n                    pickups={pickups}\n                    tremolos={tremolos}\n                    onFiltersChange={this.handleFiltersChange}\n                />\n\n                <ProductList\n                    products={filteredProducts}\n                    cartItemAmount={cartItemAmount}\n                    onAddToCart={addItemToCart}\n                    onRemoveFromCart={removeItemFromCart}\n                />\n            </>\n        );\n    }\n}\n\nCatalog.defaultName = 'Catalog';\nCatalog.propTypes = {\n    clearFilters: PropTypes.func.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    addItemToCart: PropTypes.func.isRequired,\n    removeItemFromCart: PropTypes.func.isRequired,\n    filters: PropTypes.shape({\n        brand: PropTypes.array,\n        category: PropTypes.array,\n        pickup: PropTypes.array,\n        priceFrom: PropTypes.number,\n        priceTo: PropTypes.number,\n        query: PropTypes.string,\n        tremolo: PropTypes.array\n    }).isRequired,\n    cartItemAmount: PropTypes.func.isRequired,\n    products: PropTypes.array,\n    categories: PropTypes.array,\n    brands: PropTypes.array,\n    pickups: PropTypes.array,\n    tremolos: PropTypes.array\n};\nCatalog.defaultProps = {\n    products: [],\n    categories: [],\n    brands: [],\n    pickups: [],\n    tremolos: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    clearFilters: () => dispatch(clearFilters()),\n    setFilters: filterData => dispatch(setFilters(filterData)),\n    addItemToCart: product => dispatch(addItemToCart(product)),\n    removeItemFromCart: product => dispatch(removeItemFromCart(product))\n});\n\nconst mapStateToProps = store => ({\n    filters: filtersSelector(store),\n    products: productsSelector(store),\n    categories: categoriesSelector(store),\n    brands: brandsSelector(store),\n    pickups: pickupsSelector(store),\n    tremolos: tremolosSelector(store),\n    cartItemAmount: id => cartItemAmountSelector(id, store)\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Catalog);\n","import Catalog from './Catalog';\n\nexport default Catalog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { route } from '../../utils/config';\nimport './styles.sass';\n\nconst Breadcrumbs = ({ crumbs }) => (\n    <ul className=\"breadcrumbs\">\n        <li className=\"breadcrumbs__item breadcrumbs__item--home\">\n            <Link className=\"breadcrumbs__item-link\" to={route.home.link}>\n                Home\n            </Link>\n        </li>\n        {crumbs.map((item, index) =>\n            crumbs.length - 1 === index ? (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    {item[0]}\n                </li>\n            ) : (\n                <li className=\"breadcrumbs__item\" key={item[0]}>\n                    <Link className=\"breadcrumbs__item-link\" to={item[1]}>\n                        {item[0]}\n                    </Link>\n                </li>\n            )\n        )}\n    </ul>\n);\n\nBreadcrumbs.defaultName = 'Breadcrumbs';\nBreadcrumbs.propTypes = {\n    crumbs: PropTypes.array.isRequired\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n"],"sourceRoot":""}